[{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cfr","title":"Contributing to cfr","text":"outlines propose change cfr.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"","what":"Making changes","title":"Contributing to cfr","text":"want make change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See bug report template. feature request see feature request.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Making changes","what":"Pull request process","title":"Contributing to cfr","text":"See pull request template Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"epiverse-trace/cfr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Making changes","what":"Code style","title":"Contributing to cfr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cfr","text":"Please note cfr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/cfr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 cfr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Estimating disease severity while correcting for reporting delays","text":"disease outbreak underway. want know severe disease , , case fatality risk, delay cases reported, outcomes cases — whether recovery death — known. reporting delay, can accounted knowing reporting delay past outbreaks.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"what-we-have","dir":"Articles","previous_headings":"","what":"What we have","title":"Estimating disease severity while correcting for reporting delays","text":"dataset daily cases deaths reported; Data distribution reporting delays past outbreaks disease.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"what-we-assume","dir":"Articles","previous_headings":"","what":"What we assume","title":"Estimating disease severity while correcting for reporting delays","text":"data reporting delays past outbreaks informative reporting delays current outbreak.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"case-and-death-data","dir":"Articles","previous_headings":"","what":"Case and death data","title":"Estimating disease severity while correcting for reporting delays","text":"Data cases deaths may obtained number publicly accessible sources, global Covid-19 dataset curated World Data, similar dataset made available R package covidregionaldata (Palmer et al. 2021), data outbreaks infections made available outbreaks. outbreak response scenario, data may also compiled shared locally. cfr package requires data frame three columns, “date”, “cases”, “deaths”, giving daily number reported cases deaths. Datasets columns contain information different names can handled common data science tools, packages Tidyverse, prepare data cfr. See examples vignette obtaining static severity estimate. , use data first Ebola outbreak, Democratic Republic Congo 1976, included package (Camacho et al. 2014).","code":"data(\"ebola1976\")  # view ebola dataset head(ebola1976) #>         date cases deaths #> 1 1976-08-25     1      0 #> 2 1976-08-26     0      0 #> 3 1976-08-27     0      0 #> 4 1976-08-28     0      0 #> 5 1976-08-29     0      0 #> 6 1976-08-30     0      0"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"obtaining-data-on-reporting-delays","dir":"Articles","previous_headings":"","what":"Obtaining data on reporting delays","title":"Estimating disease severity while correcting for reporting delays","text":"can access data distribution delays cases reported, deaths recoveries cases known, using convenient epiparameter package. access disease’s ‘onset--death’ distribution recent Ebola outbreak stored package’s parameter library, using function epiparameter::epidist_db() (Barry et al. 2018). <epidist> object can passed functions cfr help correct reporting delays.","code":"onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). \"Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.\" _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function  # print the object onset_to_death_ebola #> Disease: Ebola Virus Disease #> Pathogen: Ebola Virus-Zaire Subtype #> Epi Distribution: onset to death #> Study: The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). \"Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.\" _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>. #> Distribution: gamma #> Parameters: #>   shape: 2.400 #>   scale: 3.333"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"estimate-disease-severity","dir":"Articles","previous_headings":"","what":"Estimate disease severity","title":"Estimating disease severity while correcting for reporting delays","text":"use function cfr_static() calculate overall disease severity latest date outbreak. output dataframe single row three columns holds estimates severity’s mean well lower upper limits. cfr_static() function well suited small outbreaks relatively events time period consideration relatively brief, severity unlikely changed time. larger outbreaks may useful know severity changed time (e.g. following vaccination pathogen evolution), function cfr_time_varying() available. function however well suited small outbreaks requires sufficiently many cases time estimate CFR changes. can found vignette estimating disease severity varies course outbreak.","code":"cfr_static(   data = ebola1976,   epidist = onset_to_death_ebola ) #>   severity_mean severity_low severity_high #> 1         0.959        0.842             1"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"estimate-ascertainment-ratio","dir":"Articles","previous_headings":"","what":"Estimate ascertainment ratio","title":"Estimating disease severity while correcting for reporting delays","text":"important know proportion cases outbreak ascertained muster appropriate response, estimate overall burden outbreak. Note ascertainment ratio may affected number factors. main factor low ascertainment lack (access ) testing capacity, refer reporting -reporting. estimate_ascertainment() function can help estimate using daily case death data, known severity disease previous outbreaks, well delay distribution onset--death. , estimate reporting 1976 Ebola outbreak Congo, assuming Ebola virus disease (time) baseline severity 0.7 (70% cases result deaths), based CFR values estimated later, larger datasets. analysis suggests 70% 83% cases reported outbreak. details can found vignette estimating proportion cases reported outbreak.","code":"# estimate reporting with a baseline severity of 70% estimate_ascertainment(   data = ebola1976,   epidist = onset_to_death_ebola,   type = \"static\",   severity_baseline = 0.7 ) #>   ascertainment_mean ascertainment_low ascertainment_high #> 1           0.729927               0.7          0.8313539"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"concept-how-reporting-delays-bias-cfr-estimates","dir":"Articles","previous_headings":"","what":"Concept: How reporting delays bias CFR estimates","title":"Estimating disease severity while correcting for reporting delays","text":"Simply dividing number deaths number cases obtain CFR naive estimator true CFR. Suppose 10 people start showing symptoms specific disease given day end day remain alive. Suppose next 5 days, numbers new cases continue rise reach 100 new cases day 5. However, suppose day 5, infected individuals remain alive. naive estimate CFR calculated end first 5 days zero, zero deaths total — point. say, outcomes cases (infections) known. Even deaths begin occur, lag ascertainment case hospitalisation outcome leads consistently biased estimate. Hence, adjusting delays using appropriate delay distribution essential accurate estimates severity.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/data_from_incidence2.html","id":"incidence2-objects-from-linelists","dir":"Articles","previous_headings":"","what":"<incidence2> objects from linelists","title":"Handling data from {incidence2}","text":"first load linelist data 2014 Ebola outbreak provided outbreaks package, create incidence2 object view . prepare <incidence2> object using date_of_onset date_of_outcome columns date indices, grouping outcome. steps use combination functions incidence2 well common data science packages dplyr. example, used fill_NA argument set TRUE; replaces missing case death counts data 0s. default value argument FALSE, however, keeping NAs data causes downstream issues functions cfr_static(). recommend users carefully consider whether can safely fill NAs zeros purposes analysis. load delay distribution epiparameter database <epidist> object. Finally, estimate static case fatality risk correcting delays using cfr_static() function.","code":"# load ebola dataset from outbreak data(\"ebola_sim_clean\") ebola <- ebola_sim_clean$linelist  # view ebola head(ebola) #>   case_id generation date_of_infection date_of_onset date_of_hospitalisation #> 1  d1fafd          0              <NA>    2014-04-07              2014-04-17 #> 2  53371b          1        2014-04-09    2014-04-15              2014-04-20 #> 3  f5c3d8          1        2014-04-18    2014-04-21              2014-04-25 #> 4  6c286a          2              <NA>    2014-04-27              2014-04-27 #> 5  0f58c4          2        2014-04-22    2014-04-26              2014-04-29 #> 6  49731d          0        2014-03-19    2014-04-25              2014-05-02 #>   date_of_outcome outcome gender           hospital       lon      lat #> 1      2014-04-19    <NA>      f  Military Hospital -13.21799 8.473514 #> 2            <NA>    <NA>      m Connaught Hospital -13.21491 8.464927 #> 3      2014-04-30 Recover      f              other -13.22804 8.483356 #> 4      2014-05-07   Death      f               <NA> -13.23112 8.464776 #> 5      2014-05-17 Recover      f              other -13.21016 8.452143 #> 6      2014-05-07    <NA>      f               <NA> -13.23443 8.468572 # create incidence2 object of ebola deaths ebola <- incidence(   x = ebola,   date_index = c(     onset = \"date_of_onset\",     outcome = \"date_of_outcome\"   ),   groups = \"outcome\" )  # filter for outcomes that are deaths using dplyr::filter --- death counts # also filter for all onsets --- these are the case counts ebola <- filter(   ebola,   (outcome == \"Death\" & count_variable == \"outcome\") |     (count_variable == \"onset\") )  # remove groups using incidence2::regroup() ebola <- regroup(ebola)  # prepare data ebola <- prepare_data(   ebola,   cases_variable = \"onset\",   deaths_variable = \"outcome\",   fill_NA = TRUE ) onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). \"Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.\" _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function # estimate static CFR as a sanity check cfr_static(   ebola,   epidist = onset_to_death_ebola ) #>   severity_mean severity_low severity_high #> 1         0.369        0.354         0.384"},{"path":"https://epiverse-trace.github.io/cfr/articles/data_from_incidence2.html","id":"incidence2-objects-from-aggregated-case-data","dir":"Articles","previous_headings":"<incidence2> objects from linelists","what":"<incidence2> objects from aggregated case data","title":"Handling data from {incidence2}","text":"Aggregated case data Covid-19 dataset provided incidence2 can used cfr directly. usage shown vignettes vignette estimating time-varying severity. show transform data <incidence2> objects, prepare cfr. columns dataset already format can converted <incidence2> object using incidence2::incidence(), handled prepare_data(). Note grouping structure dataset given “region” variable present <incidence2> object, example overridden provide single dataset cases deaths summed across regions date prepare_data(). functionality currently development might change future.","code":"# get data bundled with the {incidence2} package covid_uk <- covidregionaldataUK  # view the data head(covid_uk) #>         date          region region_code cases_new cases_total deaths_new #> 1 2020-01-30   East Midlands   E12000004        NA          NA         NA #> 2 2020-01-30 East of England   E12000006        NA          NA         NA #> 3 2020-01-30         England   E92000001         2           2         NA #> 4 2020-01-30          London   E12000007        NA          NA         NA #> 5 2020-01-30      North East   E12000001        NA          NA         NA #> 6 2020-01-30      North West   E12000002        NA          NA         NA #>   deaths_total recovered_new recovered_total hosp_new hosp_total tested_new #> 1           NA            NA              NA       NA         NA         NA #> 2           NA            NA              NA       NA         NA         NA #> 3           NA            NA              NA       NA         NA         NA #> 4           NA            NA              NA       NA         NA         NA #> 5           NA            NA              NA       NA         NA         NA #> 6           NA            NA              NA       NA         NA         NA #>   tested_total #> 1           NA #> 2           NA #> 3           NA #> 4           NA #> 5           NA #> 6           NA # convert to incidence2 object covid_uk_incidence <- incidence(   covid_uk,   date_index = \"date\",   counts = c(\"cases_new\", \"deaths_new\"),   count_names_to = \"count_variable\" )  # View head of prepared data head(   prepare_data(     covid_uk_incidence,     cases_variable = \"cases_new\",     deaths_variable = \"deaths_new\",     fill_NA = TRUE   ) ) #>         date cases deaths #> 1 2020-01-30     0      0 #> 2 2020-01-31     0      0 #> 3 2020-02-01     0      0 #> 4 2020-02-02     0      0 #> 5 2020-02-03     0      0 #> 6 2020-02-04     0      0"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"wish estimate one typical severity quantities used epidemiology – case fatality risk (CFR), infection hospitality risk (IFR) hospitalisation fatality risk (HFR) – using method uses time series cases, infections hospitalisations (respectively) deaths, correcting delay reporting outcomes cases.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"what-we-have","dir":"Articles","previous_headings":"","what":"What we have","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially infected. first two elements expected included dataframe columns “dates”, “cases”, “deaths”. delay distribution expected specified object class <epidist> package epiparameter.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"ascertainment-for-the-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Ascertainment for the Covid-19 pandemic in the U.K.","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"function estimate_ascertainment() cfr package estimates proportion cases, infections, hospitalisations – whichever proxy infections provided – ascertained. methods based Nishiura et al. (2009) estimate severity, extended combining resulting severity estimates assumed baseline severity estimate. proportion cases, infections quantity provided ascertained given ratio (assumed) true baseline severity estimate, delay-adjusted severity estimate. delay-adjusted severity estimates can calculated using either cfr_static() cfr_time_varying() functions. See vignettes estimating static measure disease severity estimating time-varying measure disease severity, respectively, details functions.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"preparing-the-raw-data","dir":"Articles","previous_headings":"Ascertainment for the Covid-19 pandemic in the U.K.","what":"Preparing the raw data","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"First subset data focus just first months COVID-19 outbreak U.K. period test availability changed dramatically result vaccination campaign. load data provided cfr package initially made available using covidregionaldata package (Palmer et al. 2021). filter data United Kingdom , later examples use data. subset data focus just first months outbreak United Kingdom, plot cases deaths explore data. Figure 1: Incidence cases time ongoing COVID-19 outbreak U.K. Figure 2: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"# get Covid data provided with the package data(\"covid_data\")  # filter for the U.K df_covid_uk <- filter(covid_data, country == \"United Kingdom\")  # view the data format tail(df_covid_uk) #>            date        country cases deaths #> 1089 2022-12-26 United Kingdom  4132    144 #> 1090 2022-12-27 United Kingdom  3694    131 #> 1091 2022-12-28 United Kingdom  4950    128 #> 1092 2022-12-29 United Kingdom  6605    142 #> 1093 2022-12-30 United Kingdom  8419    134 #> 1094 2022-12-31 United Kingdom  7718    132 # the first few months of the pandemic df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-05-31\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"steelblue\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"onset-to-death-distribution-for-covid-19","dir":"Articles","previous_headings":"Ascertainment for the Covid-19 pandemic in the U.K.","what":"Onset-to-death distribution for Covid-19","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"retrieve appropriate distribution reported Linton et al. (2020) using epidist_db() function epiparameter package.","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"estimating-the-proportion-of-cases-that-have-been-ascertained","dir":"Articles","previous_headings":"Ascertainment for the Covid-19 pandemic in the U.K.","what":"Estimating the proportion of cases that have been ascertained","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"use estimate_ascertainment() function calculate time-varying CFR COVID-19 epidemic U.K. function includes type argument, determines whether cfr_static() cfr_time_varying() used estimate delay-adjusted severity disease. ascertainment ratio calculated disease severity calculated data, divided ‘known’ disease severity; expected known assumed best knowledge pathology disease. known disease severity passed severity_baseline argument estimate_ascertainment(), forms numerator resulting -ascertainment calculation. assume ‘true’ CFR Covid-19 0.014 (.e. 1.4%) (Verity et al. 2020). Future plans package include ability incorporate uncertainty CFR estimates calculating -ascertainment. arguments found cfr_time_varying(). calculated severity quantities time, visualise results.","code":"df_reporting_static <- estimate_ascertainment(   data = df_covid_uk_subset,   epidist = onset_to_death_covid,   type = \"static\",   severity_baseline = 0.014 ) df_reporting_varying <- estimate_ascertainment(   data = df_covid_uk,   epidist = onset_to_death_covid,   type = \"varying\",   severity_baseline = 0.014,   burn_in = 7,   max_date = as.Date(\"2020-06-30\") ) # the static reporting estimate df_reporting_static #>   ascertainment_mean ascertainment_low ascertainment_high #> 1         0.05982906        0.05932203         0.06008584  # the time-varying reporting estimate df_reporting_varying #>   ascertainment_mean ascertainment_low ascertainment_high #> 1             0.2346         0.1871687          0.2990665"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"ascertainment-in-countries-with-large-early-covid-19-outbreaks","dir":"Articles","previous_headings":"","what":"Ascertainment in countries with large early COVID-19 outbreaks","title":"Estimating the proportion of cases that are ascertained during an outbreak","text":"Finally, estimate ascertainment countries large early outbreaks Covid-19. illustrative purposes, define large outbreak one caused least 100,000 deaths 2020 2023, focus period start outbreak 1st June 2020. -ascertainment cases infections likely high early period pandemic testing symptomatic cases still scaled made widely available many countries. now use larger dataset covid_data made available cfr package, initially made available via covidregionaldata package (Palmer et al. 2021). exclude four countries provide weekly data (zeros dates ) — France, Germany, Spain Ukraine. adopt data science tools iteratively apply estimate_ascertainment() function across data grouped country. refer user book R Data Science better explanation code used , including packages Tidyverse. Plot ascertainment country. Figure 3: Example plot ascertainment ratio country early stages Covid-19 pandemic.","code":"# countries with weekly reporting weekly_reporting <- c(\"France\", \"Germany\", \"Spain\", \"Ukraine\")  # subset for early covid outbreaks covid_data_early <- filter(   covid_data, date < \"2020-06-01\",   !country %in% weekly_reporting )  # nest the data df_reporting <- nest(covid_data_early, .by = country)  # calculate the reporting rate in each country using # map on nested dataframes df_reporting <- mutate(   df_reporting,   reporting = map(     .x = data, .f = estimate_ascertainment,     # arguments to function     epidist = onset_to_death_covid, type = \"varying\",     severity_baseline = 0.014,     burn_in = 7   ) ) #> Warning: There were 3 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `reporting = map(...)`. #> Caused by warning in `.f()`: #> ! Ascertainment ratios > 1.0 detected, setting these values to 1.0 #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.  # unnest the data df_reporting <- unnest(df_reporting, cols = \"reporting\")  # visualise the data head(df_reporting) #> # A tibble: 6 × 5 #>   country   data     ascertainment_mean ascertainment_low ascertainment_high #>   <chr>     <list>                <dbl>             <dbl>              <dbl> #> 1 Argentina <tibble>              0.138             0.101              0.195 #> 2 Brazil    <tibble>              0.109             0.103              0.115 #> 3 Colombia  <tibble>              0.230             0.164              0.335 #> 4 India     <tibble>              0.252             0.220              0.291 #> 5 Indonesia <tibble>              0.156             0.117              0.216 #> 6 Iran      <tibble>              0.381             0.296              0.501 df_reporting %>%   ggplot() +   geom_pointrange(     aes(       x = fct_reorder(country, ascertainment_mean),       y = ascertainment_mean,       ymin = ascertainment_low,       ymax = ascertainment_high     )   ) +   coord_flip() +   labs(x = NULL, y = \"Ascertainment ratio\") +   theme(legend.position = \"none\") +   scale_y_continuous(     labels = percent, limits = c(0, 1)   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"want static estimate severity outbreak, using method uses time series cases, infections hospitalisations (appropriate) deaths, correcting delay reporting outcomes cases.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"what-we-have","dir":"Articles","previous_headings":"","what":"What we have","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially infected. first two elements expected included dataframe columns “dates”, “cases”, “deaths”. delay distribution expected specified object class <epidist> package epiparameter.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"severity-of-the-1976-ebola-outbreak","dir":"Articles","previous_headings":"","what":"Severity of the 1976 Ebola Outbreak","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"use case death incidence data 1976 Ebola outbreak Democratic overall severity Ebola. though roughly half way outbreak, emulating methods presented package arguably useful.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"plotting-the-raw-data","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Plotting the raw data","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"First , load raw data. , plot case incidence data. Figure 1: Incidence cases time, taken 1976 Ebola outbreak Democratic Republic Congo. Data retrieved within cfr package. Lastly, plot death data. Figure 2: Incidence deaths time dataset Figure 1. focus roughly first half dataset. subsetting data include days 30th September 1976, using dplyr::filter().","code":"data(\"ebola1976\") ggplot(ebola1976) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"steelblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   labs(     x = \"Date\", y = \"Cases\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") ggplot(ebola1976) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   labs(     x = \"Date\", y = \"Deaths\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") df_ebola_subset <- filter(ebola1976, date <= \"1976-09-30\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"the-delay-distribution","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"The delay distribution","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"example, given using case data detection case well-approximated symptom onset, use distribution describing delay onset--death. , retrieve distribution literature (Barry et al. 2018) using epidist_db() function epiparameter package following command:","code":"onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). \"Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.\" _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-incidence-of-cases-or-similar-time-series-with-a-known-death-outcome","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Estimating incidence of cases (or similar time-series) with a known death outcome","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"function known_outcomes() cfr package can estimate number cases known death outcome time. resulting data frame contains two new columns, “known_outcomes”, number known death outcomes expected day, “u_t”, -reporting factor estimates proportion cases reported, given estimated number known death outcomes. Figure 3: case death time series 1976 Ebola outbreak D.R.C., estimated known death outcomes included.","code":"# calculate known death outcomes df_known_outcomes_ebola <- known_outcomes(   data = df_ebola_subset,   epidist = onset_to_death_ebola )  # visualise head of data frame head(df_known_outcomes_ebola) #>         date cases deaths known_outcomes        u_t #> 1 1976-08-25     1      0     0.00000000 0.00000000 #> 2 1976-08-26     0      0     0.03316126 0.03316126 #> 3 1976-08-27     0      0     0.06483109 0.09799235 #> 4 1976-08-28     0      0     0.08472692 0.18271927 #> 5 1976-08-29     0      0     0.09389577 0.27661504 #> 6 1976-08-30     0      0     0.09506713 0.37168217 # plot cases and known death outcomes as separate layers ggplot(df_known_outcomes_ebola) +   geom_step(     aes(       x = date, y = cases,       colour = \"Cases\"     )   ) +   geom_step(     aes(       x = date, y = known_outcomes,       colour = \"Known death outcomes\"     )   ) +   scale_colour_manual(     values = c(       Cases = \"steelblue\",       `Known death outcomes` = \"darkgreen\"     ),     name = NULL   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Date\", y = \"No. of individuals\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-the-naive-and-corrected-cfr","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Estimating the naive and corrected CFR","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"calculate proportion cases known death outcomes, apply proportion number cases correct delay onset--death. using function cfr_static() cfr package. function estimates proportion known death outcomes time, uses estimate correct naive severity estimate. Users can correct delays passing epidemiological delay distribution optional argument, called epidist. delay distribution must appropriate severity measure calculated, must <epidist> object. can created using epiparameter::epidist(), loaded parameter library (see ). delay distribution provided, function calculates naive severity estimate, adjust delays simply total number deaths dataset divided total number cases.","code":"# calculating the naive CFR cfr_static(   data = df_ebola_subset ) #>   severity_mean severity_low severity_high #> 1     0.7197802    0.6485503     0.7836984  # calculating the corrected CFR cfr_static(   df_ebola_subset,   epidist = onset_to_death_ebola ) #>   severity_mean severity_low severity_high #> 1             1         0.87             1"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"severity-of-the-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Severity of the COVID-19 pandemic in the U.K.","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"now perform similar analysis steps, data taken ongoing COVID-19 epidemic U.K. brevity, describe steps without methodological explanations throughout example. get data incidence2 package (note originally made available covidregionaldata package longer available CRAN; see Palmer et al. (2021)).","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"plotting-the-raw-data-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Plotting the raw data","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"subset data focus just first year COVID-19 outbreak U.K. , CFR changed dramatically result vaccination campaign. static severity calculations performing vignette able deal changes severity time. change default column names match required cfr subset data.frame focus first year pandemic U.K. , plot subsetted case data. Figure 4: Incidence cases time ongoing COVID-19 outbreak U.K. , plot subsetted death data. Figure 5: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"df_covid_uk <- covidregionaldataUK  df_covid_uk <- aggregate(   data = df_covid_uk,   x = cbind(cases_new, deaths_new) ~ date,   FUN = function(x) sum(x, na.rm = TRUE) )  df_covid_uk <- rename(   df_covid_uk,   cases = cases_new, deaths = deaths_new )  df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-12-31\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"steelblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"the-delay-distribution-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"The delay distribution","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"retrieve appropriate distribution Linton et al. (2020) using epidist_db() function epiparameter package.","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton\",   single_epidist = TRUE )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-incidence-of-cases-with-a-known-death-outcome","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Estimating incidence of cases with a known death outcome","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"use method implementation Ebola example calculate number known death outcomes time. Figure 6: case time series ongoing COVID-19 epidemic U.K., estimated known death outcomes included.","code":"df_known_outcomes_covid <- known_outcomes(   data = df_covid_uk_subset,   epidist = onset_to_death_covid ) ggplot(df_known_outcomes_covid) +   geom_step(     aes(       x = date, y = cases,       colour = \"Cases\"     )   ) +   geom_step(     aes(       x = date, y = known_outcomes,       colour = \"Known death outcomes\"     )   ) +   scale_colour_manual(     values = c(       Cases = \"steelblue\",       `Known death outcomes` = \"darkgreen\"     ),     name = NULL   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Date\", y = \"No. of individuals\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-the-naive-and-corrected-cfr-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Estimating the naive and corrected CFR","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"Finally, calculate naive corrected CFRs COVID-19 epidemic U.K.","code":"# calculating the naive CFR cfr_static(   df_covid_uk_subset ) #>   severity_mean severity_low severity_high #> 1    0.02893505   0.02878716    0.02908351  # calculating the corrected CFR cfr_static(   df_covid_uk_subset,   epidist = onset_to_death_covid ) #>   severity_mean severity_low severity_high #> 1         0.038        0.038         0.038"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"details-adjusting-for-delays-between-two-time-series","dir":"Articles","previous_headings":"","what":"Details: Adjusting for delays between two time series","title":"Calculating a static, delay-adjusted estimate of disease severity","text":"method used cfr_static() function follows Nishiura et al. (2009). function calculates quantity \\(u_t\\) day within input data, represents proportion cases known outcome, day \\(t\\). may known death outcome, shown earlier vignette. Following Nishiura et al., \\(u_t\\) calculated following way: \\[   u_t = \\dfrac{\\sum_{= 0}^t         \\sum_{j = 0}^\\infty c_i f_{j - }}{\\sum_{= 0} c_i}, \\] \\(f_t\\) value probability mass function time \\(t\\) \\(c_t\\), \\(d_t\\) number new cases new deaths time \\(t\\), (respectively). use \\(u_t\\) end outbreak following likelihood function estimate severity disease question. \\[   {\\sf L}(\\theta | y) = \\log{\\dbinom{u_tC}{D}} + D \\log{\\theta} +   (u_tC - D)\\log{(1.0 - \\theta)}, \\] \\(C\\) \\(D\\) cumulative number cases deaths (respectively) time \\(t\\). Lastly, \\(\\theta\\) parameter wish estimate, severity disease. estimate \\(\\theta\\) using simple maximum-likelihood methods, allowing functions within package quick easy tools use. precise severity measure — CFR, IFR, HFR, etc — \\(\\theta\\) represents depends upon input data given user. complete clarity, common time series users might calculate severity resulting severity estimate data. Case death incidence data, case--death delay distribution (close approximation, onset--death) — Case Fatality Risk (CFR). Infection death incidence data, exposure--death delay distribution (close approximation). Hospitalisation Fatality Risk (HFR) — Hospitalisation death incidence data, delay distribution (close approximation).","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Estimating how disease severity varies over the course of an outbreak","text":"wish estimate common severity quantities change time — case fatality risk (CFR) — using method uses time series cases, infections hospitalisations (appropriate) deaths, correcting delay reporting outcomes cases.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"what-we-have","dir":"Articles","previous_headings":"","what":"What we have","title":"Estimating how disease severity varies over the course of an outbreak","text":"time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially infected. first two elements expected included dataframe columns “dates”, “cases”, “deaths”. delay distribution expected specified object class <epidist> package epiparameter.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"changing-severity-of-the-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Changing severity of the COVID-19 pandemic in the U.K.","title":"Estimating how disease severity varies over the course of an outbreak","text":"outline time-varying severity estimation works cfr using number examples. data examples ongoing COVID-19 epidemic. Firstly, analyse U.K. data, pick three countries large outbreaks analyse.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"preparing-the-raw-data","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Preparing the raw data","title":"Estimating how disease severity varies over the course of an outbreak","text":"First subset data focus just first year COVID-19 outbreak U.K. period, CFR changed dramatically result number changes policy, implementation relaxation lockdown, rollout vaccine, new variants emerging, etc. load Covid-19 daily case death data 19 countries ≥ 100,000 deaths 2020 2023 — data provided cfr package covid_data, initially made available covidregionaldata package (Palmer et al. 2021), longer available CRAN. subset data focus just first months outbreak. , plot case incidence data. plotting commands hidden brevity. Figure 1: Incidence cases time ongoing COVID-19 outbreak U.K. also plot death incidence data time. Figure 2: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"# get Covid data loaded with the package data(\"covid_data\")  # filter for the U.K df_covid_uk <- filter(covid_data, country == \"United Kingdom\") df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-12-31\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"steelblue\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"onset-to-death-distribution-for-covid-19","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Onset-to-death distribution for Covid-19","title":"Estimating how disease severity varies over the course of an outbreak","text":"retrieve appropriate distribution reported Linton et al. (2020) using epidist_db() function epiparameter package.","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton\",   single_epidist = TRUE )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"estimating-the-naive-and-corrected-cfr","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Estimating the naive and corrected CFR","title":"Estimating how disease severity varies over the course of an outbreak","text":"use cfr_time_varying() function within cfr package calculate time-varying CFR COVID-19 epidemic U.K. calculated severity quantities time, plot results; first naive estimate. Figure 3: Example plot naive time-varying CFR. calculate time-varying CFR ongoing COVID-19 epidemic U.K., uncorrected delays. red line shows CFR estimate shaded grey region shows lower upper limits estimate 95% confidence intervals. Lastly, plot estimate corrected reporting delays. Figure 4: Example plot corrected time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic U.K., corrected delays. red line shows CFR estimate shaded grey region shows lower upper limits estimate 95% confidence intervals.","code":"# calculating the naive time-varying CFR df_covid_cfr_uk_naive <- cfr_time_varying(   df_covid_uk_subset,   epidist = onset_to_death_covid,   burn_in = 7 )  # calculating the corrected time-varying CFR df_covid_cfr_uk_corrected <- cfr_time_varying(   df_covid_uk_subset,   epidist = onset_to_death_covid,   burn_in = 7 ) ggplot(df_covid_cfr_uk_naive) +   geom_ribbon(     aes(       x = date, ymin = severity_low, ymax = severity_high     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_mean     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") #> Warning: Removed 46 rows containing missing values (`geom_line()`). ggplot(df_covid_cfr_uk_corrected) +   geom_ribbon(     aes(       x = date, ymin = severity_low, ymax = severity_high     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_mean     ),     colour = \"brown\"   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") #> Warning: Removed 46 rows containing missing values (`geom_line()`)."},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"severity-of-covid-19-in-multiple-countries","dir":"Articles","previous_headings":"","what":"Severity of COVID-19 in multiple countries","title":"Estimating how disease severity varies over the course of an outbreak","text":"now show calculate time-varying CFR Covid-19 multiple countries large outbreaks. , adopt data science approach apply cfr_time_varying() function across data grouped country. refer user book R Data Science better explanation code used , including packages Tidyverse. use larger Covid-19 cases deaths data provided package covid_data. exclude four countries provide weekly data (zeros dates ) — France, Germany, Spain Ukraine. Next, group data country apply cfr_time_varying() function across group (country). code takes moments run. simplicity, use delay distribution onset death countries. Finally plot time-varying CFR selection three countries large outbreaks COVID-19: Brazil, India, United States. Figure 5: Example plot corrected time-varying CFR. calculate time-varying CFR ongoing COVID-19 epidemic Brazil, India, United States, corrected delays.","code":"# countries with weekly reporting weekly_reporting <- c(\"France\", \"Germany\", \"Spain\", \"Ukraine\") covid_data <- filter(covid_data, !country %in% weekly_reporting)  # for each country, get the time-varying severity estimate, # correcting for delays and smoothing the case and death data  # first nest the data; nest() from {tidyr} df_covid_cfr <- nest(   covid_data,   .by = country ) # to each nested data frame, apply the function `cfr_time_varying` # overwrite the `data` column, as all data will be preserved df_covid_cfr <- mutate(   df_covid_cfr,   # using map() from {purrr}   data = map(     .x = data, .f = cfr_time_varying,     # arguments to the function     epidist = onset_to_death_covid,     smoothing_window = 7, burn_in = 7   ) )  # unnest the cfr data; unnest() from {tidyr} df_covid_cfr <- unnest(df_covid_cfr, cols = data) filter(df_covid_cfr, country %in% c(\"Brazil\", \"India\", \"United States\")) %>%   ggplot() +   geom_ribbon(     aes(       x = date, ymin = severity_low, ymax = severity_high,       group = country     ),     fill = \"grey\"   ) +   geom_line(     aes(       x = date, y = severity_mean, colour = country     )   ) +   scale_x_date(     date_labels = \"%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   scale_colour_brewer(     palette = \"Dark2\"   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) +   coord_cartesian(     ylim = c(0, 0.15),     expand = FALSE   ) +   theme_classic() +   theme(legend.position = \"top\") #> Warning: Removed 264 rows containing missing values (`geom_line()`)."},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"details-adjusting-for-delays-between-two-time-series","dir":"Articles","previous_headings":"","what":"Details: Adjusting for delays between two time series","title":"Estimating how disease severity varies over the course of an outbreak","text":"function cfr_time_varying() cfr package estimates number cases known outcome time, following Nishiura et al. (2009). function calculates quantity \\(k_t\\) day within input data, represents number cases known outcome, day \\(t\\). may known death outcome, shown earlier vignette. Following Nishiura et al. (2009), \\(k_t\\) calculated following way: \\[   k_t = \\sum_{j = 0}^t c_t f_{j - t}. \\] assume severity measure, example CFR, interest binomially distributed, following way \\[   d_t \\sim {\\sf Binomial}(k_t, \\theta_t). \\] use maximum likelihood estimation determine value \\(\\theta_t\\) \\(t\\), \\(\\theta\\) represents severity measure interest. precise severity measure — CFR, IFR, HFR, etc — \\(\\theta\\) represents depends upon input data given user.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder. Adam Kucharski. Author, copyright holder. Tim Russell. Author, copyright holder. Joshua W. Lambert. Reviewer. Hugo Gruson. Reviewer. Tim Taylor. Reviewer. James M. Azam. Reviewer. Abdoelnaser M. Degoot. Reviewer.","code":""},{"path":"https://epiverse-trace.github.io/cfr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Kucharski , Russell T (2023). cfr: Estimate Disease Severity -Reporting. https://github.com/epiverse-trace/cfr, https://epiverse-trace.github.io/cfr/.","code":"@Manual{,   title = {cfr: Estimate Disease Severity and Under-Reporting},   author = {Pratik Gupte and Adam Kucharski and Tim Russell},   year = {2023},   note = {https://github.com/epiverse-trace/cfr, https://epiverse-trace.github.io/cfr/}, }"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"cfr-estimate-disease-severity-and-under-reporting-","dir":"","previous_headings":"","what":"Estimate Disease Severity and Under-Reporting","title":"Estimate Disease Severity and Under-Reporting","text":"cfr R package estimate disease severity -reporting real-time, accounting delays epidemic time-series. cfr provides simple, fast methods calculate overall static case fatality risk (CFR) outbreak given time point, well CFR changes course outbreak. cfr can help estimate disease -reporting real-time, accounting delays reporting outcomes cases. cfr implements methods outlined Nishiura et al. (2009). plans add estimates based methods. cfr uses epiparameter package access library epidemiological delay distributions, order calculate delay-corrected CFR estimates, packages developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE initiative.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Disease Severity and Under-Reporting","text":"current development version cfr can installed GitHub using pak package.","code":"if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/cfr\")  # Also install R package {epiparameter} for epidemiological parameter values pak::pak(\"epiverse-trace/epiparameter\")"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"overall-severity-of-the-1976-ebola-outbreak","dir":"","previous_headings":"Quick start","what":"Overall severity of the 1976 Ebola outbreak","title":"Estimate Disease Severity and Under-Reporting","text":"example shows use cfr estimate overall case fatality risks 1976 Ebola outbreak (Camacho et al. 2014).","code":"# Load package library(cfr)  # Load the Ebola 1976 data provided with the package data(\"ebola1976\")  # read delay distribution for ebolavirus onset to death from {epiparameter} # accesses parameters reported in https://doi.org/10.1016/S0140-6736(18)31387-4 onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE )  # Calculate the static CFR without correcting for delays cfr_static(data = ebola1976) #>   severity_mean severity_low severity_high #> 1      0.955102    0.9210866     0.9773771  # Calculate the static CFR while correcting for delays cfr_static(   data = ebola1976,   epidist = onset_to_death_ebola ) #>   severity_mean severity_low severity_high #> 1         0.959        0.842             1"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"change-in-real-time-estimates-of-overall-severity-during-the-1976-ebola-outbreak","dir":"","previous_headings":"Quick start","what":"Change in real-time estimates of overall severity during the 1976 Ebola outbreak","title":"Estimate Disease Severity and Under-Reporting","text":"example show estimate overall severity can change data cases deaths time becomes available, using function cfr_rolling(). delay onset--death, simple “naive” calculation just divides deaths--date cases--date underestimate severity. cfr_rolling() function uses cfr_severity() adjustment account delays, instead compares deaths--date cases--known-outcome--date. example shows adjusted estimate converges “naive” estimate outbreak declines, hence larger large proportion cases known outcomes. plot rolling CFR visualise severity changes time, using ggplot2 package. plotting code hidden . Disease severity ebola 1976 outbreak estimated day epidemic. rolling CFR value converges static value towards end outbreak. corrected uncorrected estimates shown.","code":"# Calculate the CFR without correcting for delays on each day of the outbreak rolling_cfr_naive <- cfr_rolling(   data = ebola1976 )  # add the date from the outbreak rolling_cfr_naive <- cbind(date = ebola1976[, \"date\"], rolling_cfr_naive)  # see the first few rows head(rolling_cfr_naive) #>         date severity_mean severity_low severity_high #> 1 1976-08-25             0            0         0.975 #> 2 1976-08-26             0            0         0.975 #> 3 1976-08-27             0            0         0.975 #> 4 1976-08-28             0            0         0.975 #> 5 1976-08-29             0            0         0.975 #> 6 1976-08-30             0            0         0.975  # Calculate the rolling daily CFR while correcting for delays rolling_cfr_corrected <- cfr_rolling(   data = ebola1976,   epidist = onset_to_death_ebola )  # add the date from the outbreak rolling_cfr_corrected <- cbind(   date = ebola1976[, \"date\"],   rolling_cfr_corrected )  head(rolling_cfr_corrected) #>         date severity_mean severity_low severity_high #> 1 1976-08-25         0.001           NA            NA #> 2 1976-08-26         0.001        0.001         0.999 #> 3 1976-08-27         0.001        0.001         0.999 #> 4 1976-08-28         0.001        0.001         0.999 #> 5 1976-08-29         0.001        0.001         0.999 #> 6 1976-08-30         0.001        0.001         0.994"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package vignettes","title":"Estimate Disease Severity and Under-Reporting","text":"details use cfr can found online documentation package vignettes, “Articles”.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Estimate Disease Severity and Under-Reporting","text":"report bug please open issue.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Estimate Disease Severity and Under-Reporting","text":"Contributions cfr welcomed. Please follow package contributing guide.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Estimate Disease Severity and Under-Reporting","text":"Please note cfr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate static severity for an expanding time series — cfr_rolling","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"Calculates CFR time point case death time series supplied, using expanding window time. static CFR calculated time point, using time series start time point, increasing number time points included one iteration.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"","code":"cfr_rolling(data, epidist = NULL, poisson_threshold = 100)"},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"data <data.frame> containing outbreak data. daily time series dates absolute indicator time (e.g. epiday epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note <data.frame> required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation. poisson_threshold case count use Poisson approximation. Set 100 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"<data.frame> maximum likelihood estimate 95% confidence interval daily severity estimates, named \"severity_mean\", \"severity_low\", \"severity_high\", one row day original data.frame.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"delay correction applied passing <epidist>, internal function estimate_severity() used calculate rolling severity.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_rolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate static severity for an expanding time series — cfr_rolling","text":"","code":"# load package data data(\"ebola1976\")  # get an onset to death distribution from the {epiparameter} package onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). “Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.” _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function  # estimate severity without correcting for delays cfr_static(ebola1976) #>   severity_mean severity_low severity_high #> 1      0.955102    0.9210866     0.9773771  # estimate severity for each day while correcting for delays # view only the first values estimate <- cfr_rolling(   ebola1976,   epidist = onset_to_death_ebola )  head(estimate) #>   severity_mean severity_low severity_high #> 1         0.001           NA            NA #> 2         0.001        0.001         0.999 #> 3         0.001        0.001         0.999 #> 4         0.001        0.001         0.999 #> 5         0.001        0.001         0.999 #> 6         0.001        0.001         0.994"},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a static disease severity measure — cfr_static","title":"Estimate a static disease severity measure — cfr_static","text":"Calculates severity disease, optionally correcting reporting delays using epidemiological delay distribution time symptom onset death (onset--death). delay distributions may passed calculate different disease severity measures hospitalisation fatality risk.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a static disease severity measure — cfr_static","text":"","code":"cfr_static(data, epidist = NULL, poisson_threshold = 100)"},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a static disease severity measure — cfr_static","text":"data <data.frame> containing outbreak data. daily time series dates absolute indicator time (e.g. epiday epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note <data.frame> required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation. poisson_threshold case count use Poisson approximation. Set 100 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a static disease severity measure — cfr_static","text":"<data.frame> maximum likelihood estimate 95% confidence interval severity estimates, named \"severity_mean\", \"severity_low\", \"severity_high\".","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"details-adjusting-for-delays-between-two-time-series","dir":"Reference","previous_headings":"","what":"Details: Adjusting for delays between two time series","title":"Estimate a static disease severity measure — cfr_static","text":"method used cfr_static() follows Nishiura et al. (2009). function calculates quantity \\(u_t\\) day within input data, represents proportion cases known outcome day \\(t\\). Following Nishiura et al., \\(u_t\\) calculated : $$u_t = \\dfrac{\\sum_{= 0}^t         \\sum_{j = 0}^\\infty c_i f_{j - }}{\\sum_{= 0} c_i}$$ \\(f_t\\) value probability mass function time \\(t\\) \\(c_t\\), \\(d_t\\) number new cases new deaths time \\(t\\), (respectively). use \\(u_t\\) end outbreak following likelihood function estimate severity disease question. $${\\sf L}({\\theta \\mid y}) = \\log{\\dbinom{u_tC}{D}} + D \\log{\\theta} +   (u_tC - D)\\log{(1.0 - \\theta)}$$ \\(C\\) \\(D\\) cumulative number cases deaths (respectively) time \\(t\\). \\(\\theta\\) parameter wish estimate, severity disease. estimate \\(\\theta\\) using simple maximum-likelihood methods, allowing functions within package quick easy tools use. precise severity measure — CFR, IFR, HFR, etc — \\(\\theta\\) represents depends upon input data given user. epidemiological delay distribution passed epidist used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (usually, death) time \\(t\\), parameterised disease-specific parameters supplied .","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate a static disease severity measure — cfr_static","text":"Nishiura, H., Klinkenberg, D., Roberts, M., & Heesterbeek, J. . P. (2009). Early Epidemiological Assessment Virulence Emerging Infectious Diseases: Case Study Influenza Pandemic. PLOS ONE, 4(8), e6852. doi:10.1371/journal.pone.0006852","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_static.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a static disease severity measure — cfr_static","text":"","code":"# load package data data(\"ebola1976\")  # get an onset to death distribution from the {epiparameter} package onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). “Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.” _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function  # estimate severity without correcting for delays cfr_static(ebola1976) #>   severity_mean severity_low severity_high #> 1      0.955102    0.9210866     0.9773771  # estimate severity while correcting for delays cfr_static(   ebola1976,   epidist = onset_to_death_ebola ) #>   severity_mean severity_low severity_high #> 1         0.959        0.842             1"},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a severity measure that varies over time — cfr_time_varying","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"Calculates severity disease changes time optionally correcting reporting delays using epidemiological delay distribution time symptom onset death (onset--death).","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"","code":"cfr_time_varying(   data,   epidist = NULL,   burn_in = get_default_burn_in(epidist),   smoothing_window = NULL )"},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"data <data.frame> containing outbreak data. daily time series dates absolute indicator time (e.g. epiday epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note <data.frame> required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation. burn_in single integer value number time-points (typically days) disregard start time-series, burn-period desired. <epidist> provided delay correction requested, default value set mean <epidist>. Defaults 7 <epidist> provided, <epidist> parameterised. sensible default value disregards first week cases deaths, assuming daily data. consider case data including start time-series, set argument 0. smoothing_window odd number determining smoothing window size use smoothing case death time-series, using rolling median procedure (k argument stats::runmed()) calculating time-varying severity. default behaviour apply smoothing. minimum value argument 1.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"<data.frame> containing maximum likelihood estimate estimate 95% confidence interval corrected severity.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"details-adjusting-for-delays-between-two-time-series","dir":"Reference","previous_headings":"","what":"Details: Adjusting for delays between two time series","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"function estimates number cases known outcome time, following Nishiura et al. (2009). function calculates quantity \\(k_t\\) day within input data, represents number cases known outcome, day \\(t\\). \\(k_t\\) calculated following way: $$k_t = \\sum_{j = 0}^t c_t f_{j - t}$$ assume severity measure, example CFR, interest binomially distributed, following way: $$d_t \\sim {\\sf Binomial}(k_t, \\theta_t)$$ use maximum likelihood estimation determine value \\(\\theta_t\\) \\(t\\), \\(\\theta\\) represents severity measure interest. epidemiological delay distribution passed epidist used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (usually, death) time \\(t\\), parameterised disease-specific parameters supplied .","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"Nishiura, H., Klinkenberg, D., Roberts, M., & Heesterbeek, J. . P. (2009). Early Epidemiological Assessment Virulence Emerging Infectious Diseases: Case Study Influenza Pandemic. PLOS ONE, 4(8), e6852. doi:10.1371/journal.pone.0006852","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/cfr_time_varying.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a severity measure that varies over time — cfr_time_varying","text":"","code":"# get data pre-loaded with the package data(\"covid_data\") df_covid_uk <- covid_data[covid_data$country == \"United Kingdom\", ]  # load epidist object from {epiparameter} onset_to_death_covid <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # estimate time varying severity without correcting for delays cfr_time_varying <- cfr_time_varying(   data = df_covid_uk,   burn_in = 7L ) # View tail(cfr_time_varying) #>             date        country cases deaths severity_mean severity_low #> 20690 2022-12-26 United Kingdom  4132    144    0.03484995   0.02946797 #> 20709 2022-12-27 United Kingdom  3694    131    0.03546291   0.02973354 #> 20728 2022-12-28 United Kingdom  4950    128    0.02585859   0.02161760 #> 20747 2022-12-29 United Kingdom  6605    142    0.02149886   0.01813784 #> 20766 2022-12-30 United Kingdom  8419    134    0.01591638   0.01335220 #> 20785 2022-12-31 United Kingdom  7718    132    0.01710288   0.01432899 #>       severity_high #> 20690    0.04090181 #> 20709    0.04194157 #> 20728    0.03067046 #> 20747    0.02529105 #> 20766    0.01882303 #> 20785    0.02024949  # estimate time varying severity while correcting for delays cfr_time_varying <- cfr_time_varying(   data = df_covid_uk,   epidist = onset_to_death_covid,   burn_in = 7L ) tail(cfr_time_varying) #>             date        country cases deaths severity_mean severity_low #> 20690 2022-12-26 United Kingdom  4132    144    0.03471553   0.02935401 #> 20709 2022-12-27 United Kingdom  3694    131    0.03065762   0.02569476 #> 20728 2022-12-28 United Kingdom  4950    128    0.02893963   0.02419931 #> 20747 2022-12-29 United Kingdom  6605    142    0.03093008   0.02611344 #> 20766 2022-12-30 United Kingdom  8419    134    0.02815718   0.02364360 #> 20785 2022-12-31 United Kingdom  7718    132    0.02684018   0.02250428 #>       severity_high #> 20690    0.04074453 #> 20709    0.03627492 #> 20728    0.03431472 #> 20747    0.03635481 #> 20766    0.03326130 #> 20785    0.03174924"},{"path":"https://epiverse-trace.github.io/cfr/reference/covid_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","title":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","text":"Data adapted covidregionaldata package daily cases deaths 19 countries 100,000 deaths period 2020-01-01 2022-12-31. See References publication links data sources made available covidregionaldata. Data provided <data.frame>.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/covid_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","text":"","code":"covid_data"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/reference/covid_data.html","id":"covid-data","dir":"Reference","previous_headings":"","what":"covid_data","title":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","text":"<data.frame> 20,786 rows 4 columns: date Calendar date format %Y-%m-%d country country name simple format, e.g. \"United States\" rather \"United States America\" cases Number cases reported date deaths Number deaths reported date","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/covid_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","text":"doi:10.21105/joss.03290 .","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/covid_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily Covid-19 case and death data for countries with 100,000 or more deaths — covid_data","text":"Joseph Palmer, Katharine Sherratt, Richard Martin-Nielsen, Jonnie Bevan, Hamish Gibbs, Sebastian Funk Sam Abbott (2021). covidregionaldata: Subnational data COVID-19 epidemiology. doi:10.21105/joss.03290","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":null,"dir":"Reference","previous_headings":"","what":"Ebola 1976 outbreak case data — ebola1976","title":"Ebola 1976 outbreak case data — ebola1976","text":"example epidemic outbreak dataset use cfr package. dataset comes first Ebola outbreak Zaire 1976 analysed Camacho et al. (2014).","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ebola 1976 outbreak case data — ebola1976","text":"","code":"ebola1976"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"ebola-","dir":"Reference","previous_headings":"","what":"ebola1976","title":"Ebola 1976 outbreak case data — ebola1976","text":"<data.frame> 73 rows 3 columns: date Calendar date cases Number cases reported deaths Number deaths reported","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ebola 1976 outbreak case data — ebola1976","text":"doi:10.1016/j.epidem.2014.09.003","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ebola 1976 outbreak case data — ebola1976","text":"Camacho, ., Kucharski, . J., Funk, S., Breman, J., Piot, P., & Edmunds, W. J. (2014). Potential large outbreaks Ebola virus disease. Epidemics, 9, 70–78. doi:10.1016/j.epidem.2014.09.003","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_ascertainment.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","title":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","text":"Estimates proportion cases infections ascertained, given time-series cases deaths, delay distribution baseline severity estimate. resulting ascertainment estimate calculated ratio baseline severity estimate, assumed 'true' disease severity, delay-adjusted severity estimate.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_ascertainment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","text":"","code":"estimate_ascertainment(   data,   epidist = NULL,   type = c(\"static\", \"varying\"),   severity_baseline,   burn_in = get_default_burn_in(epidist),   smoothing_window = NULL,   max_date = NULL )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_ascertainment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","text":"data <data.frame> containing outbreak data. daily time series dates absolute indicator time (e.g. epiday epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note <data.frame> required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation. type string, either \"static\" \"varying\" determines whether cfr_static() cfr_time_varying() used calculate resulting ascertainment ratio. Defaults \"static\" argument missing. severity_baseline single number range 0.0 -- 1.0 assumed true baseline severity estimate used estimate overall ascertainment ratio. Missing default, causes function error; must supplied user. burn_in single integer value number time-points (typically days) disregard start time-series, burn-period desired. <epidist> provided delay correction requested, default value set mean <epidist>. Defaults 7 <epidist> provided, <epidist> parameterised. sensible default value disregards first week cases deaths, assuming daily data. consider case data including start time-series, set argument 0. smoothing_window odd number determining smoothing window size use smoothing case death time-series, using rolling median procedure (k argument stats::runmed()) calculating time-varying severity. default behaviour apply smoothing. minimum value argument 1. max_date Date representing user supplied maximum date, time-varying severity estimate calculated. Useful case long time-series, user wishes focus specific time-period. See .Date() converting string Date.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_ascertainment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","text":"<data.frame> containing maximum likelihood estimate estimate 95% confidence interval corrected severity, named \"ascertainment_mean\" (central estimate), \"ascertainment_low\" \"ascertainment_high\" lower upper interval limits.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_ascertainment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the ascertainment ratio of a disease — estimate_ascertainment","text":"","code":"# get data pre-loaded with the package data(\"covid_data\") df_covid_uk <- covid_data[covid_data$country == \"United Kingdom\", ]  df_covid_uk_subset <- subset(df_covid_uk, date <= \"2020-05-31\")  # load epidist object from {epiparameter} onset_to_death_covid <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # use a severity baseline of 1.4% (0.014) taken from Verity et al. (2020) # Lancet Infectious Diseases: 10.1016/S1473-3099(20)30243-7  estimate_ascertainment(   data = df_covid_uk,   epidist = onset_to_death_covid,   type = \"varying\",   severity_baseline = 0.014,   burn_in = 7L,   max_date = as.Date(\"2020-06-30\") ) #>   ascertainment_mean ascertainment_low ascertainment_high #> 1             0.2346         0.1871687          0.2990665"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the corrected case fatality risk — estimate_severity","title":"Estimate the corrected case fatality risk — estimate_severity","text":"Estimates maximum likelihood estimate 95% confidence interval corrected severity, using total cases total cases known outcomes, latter replaces total number deaths standard (naive) severity definition. use binomial likelihood, approximated Poisson likelihood large samples.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the corrected case fatality risk — estimate_severity","text":"","code":"estimate_severity(   total_cases,   total_deaths,   total_outcomes,   poisson_threshold = 100 )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the corrected case fatality risk — estimate_severity","text":"total_cases total number cases observed period outbreak interest. total number cases must greater equal total number deaths. total_deaths total number deaths observed period outbreak interest. total number deaths must less equal total number cases. total_outcomes total number outcomes expected observed period outbreak interest. See known_outcomes(). poisson_threshold case count use Poisson approximation. Set 100 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the corrected case fatality risk — estimate_severity","text":"data.frame maximum likelihood estimate 95% confidence interval corrected severity estimates, named \"severity_mean\", \"severity_low\", \"severity_high\".","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a default burn-in value from a delay distribution — get_default_burn_in","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"Get default burn-value delay distribution","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"","code":"get_default_burn_in(epidist = NULL)"},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"single integer, burn-value.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate known outcomes of cases using a delay distribution — known_outcomes","title":"Estimate known outcomes of cases using a delay distribution — known_outcomes","text":"Estimates expected number individuals known outcomes case outcome time series outbreak data, epidemiological delay distribution symptom onset outcome. calculating case fatality risk, outcomes must deaths, delay distribution must onset--death distribution, function returns estimates known death outcomes.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate known outcomes of cases using a delay distribution — known_outcomes","text":"","code":"known_outcomes(data, epidist)"},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate known outcomes of cases using a delay distribution — known_outcomes","text":"data <data.frame> containing outbreak data. daily time series dates absolute indicator time (e.g. epiday epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note <data.frame> required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epidist optional argument delay distribution used, form <epidist> object. Defaults NULL, case delay correction applied. Passing <epidist> automatically applies delay correction severity estimation.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate known outcomes of cases using a delay distribution — known_outcomes","text":"<data.frame> columns data, two additional columns: \"known_outcomes\" total number known outcomes day outbreak, \"u_t\" -reporting factor.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate known outcomes of cases using a delay distribution — known_outcomes","text":"","code":"# Load Ebola 1976 outbreak data data(\"ebola1976\")  # read epidist for EVD onset to death from {epiparameter} onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"The-Ebola-Outbreak-Epidemiology-Team\",   single_epidist = TRUE ) #> Using The-Ebola-Outbreak-Epidemiology-Team, Barry A, Ahuka-Mundeke S, Ahmed #> YA, Allarangar Y, Anoko J, Archer BN, Abedi AA, Bagaria J, Belizaire #> MRD, Bhatia S, Bokenge T, Bruni E, Cori A, Dabire E, Diallo AM, Diallo #> B, Donnelly CA, Dorigatti I, Dorji TC, Waeber AREC, Fall IS, Ferguson #> NM, FitzJohn RG, Tengomo GLF, Formenty PBH, Forna A, Fortin A, Garske #> T, Gaythorpe KA, Gurry C, Hamblion E, Djingarey MH, Haskew C, Hugonnet #> SAL, Imai N, Impouma B, Kabongo G, Kalenga OI, Kibangou E, Lee TM, #> Lukoya CO, Ly O, Makiala-Mandanda S, Mamba A, Mbala-Kingebeni P, #> Mboussou FFR, Mlanda T, Makuma VM, Morgan O, Mulumba AM, Kakoni PM, #> Mukadi-Bamuleka D, Muyembe J, Bathé NT, Ngamala PN, Ngom R, Ngoy G, #> Nouvellet P, Nsio J, Ousman KB, Peron E, Polonsky JA, Ryan MJ, Touré A, #> Towner R, Tshapenda G, Van De Weerdt R, Van Kerkhove M, Wendland A, Yao #> NKM, Yoti Z, Yuma E, Kabamba GK, Mwati JdDL, Mbuy G, Lubula L, Mutombo #> A, Mavila O, Lay Y, Kitenge E (2018). “Outbreak of Ebola virus disease #> in the Democratic Republic of the Congo, April–May, 2018: an #> epidemiological study.” _The Lancet_. doi:10.1016/S0140-6736(18)31387-4 #> <https://doi.org/10.1016/S0140-6736%2818%2931387-4>.  #> To retrieve the citation use the 'get_citation' function  # examine the first few rows of the output outcomes <- known_outcomes(data = ebola1976, onset_to_death_ebola)  head(outcomes) #>         date cases deaths known_outcomes        u_t #> 1 1976-08-25     1      0     0.00000000 0.00000000 #> 2 1976-08-26     0      0     0.03316126 0.03316126 #> 3 1976-08-27     0      0     0.06483109 0.09799235 #> 4 1976-08-28     0      0     0.08472692 0.18271927 #> 5 1976-08-29     0      0     0.09389577 0.27661504 #> 6 1976-08-30     0      0     0.09506713 0.37168217"},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare common epidemiological data formats for CFR estimation — prepare_data","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"S3 generic methods classes commonly used epidemiological data. Currently, supported data format <incidence2> incidence2 package. See incidence2::incidence(). Grouped <incidence2> data supported, see Details.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"","code":"prepare_data(data, ...)  # S3 method for incidence2 prepare_data(   data,   cases_variable = \"cases\",   deaths_variable = \"deaths\",   fill_NA = FALSE,   ... )"},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"data <data.frame>-like object. Currently, <incidence2> objects supported. may grouped. ... Currently unused. Passing extra arguments throw warning. cases_variable string name cases variable \"count_variable\" column data. deaths_variable string name deaths variable \"count_variable\" column data. fill_NA logical indicating whether NAs cases deaths data replaced 0s. default value FALSE. function error fill_NA = FALSE NAs detected case death data.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"<data.frame> suitable disease severity estimation functions provided cfr, columns \"date\", \"cases\", \"deaths\". Additionally, grouped <incidence2> data, columns representing grouping variables also present. result continuous sequence dates start end date data; required data passed functions cfr_static().","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"method <incidence2> data can replace NAs case death data 0s using fill_NA argument, FALSE default, meaning NAs retained. NAs arise dataset non-sequential dates, function fills missing dates range dates input data. downstream functions require data continuous sequence dates. Keeping NAs cause downstream issues calling functions cfr_static() data, handle NAs. Setting fill_NA = TRUE resolves issue, must conscious choice. Passing grouped <incidence2> object data result function respecting grouping returning grouping variables separate columns.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare common epidemiological data formats for CFR estimation — prepare_data","text":"","code":"#### For <incidence2> data #### # load Covid-19 data from incidence2 covid_uk <- incidence2::covidregionaldataUK  # convert to incidence2 object covid_uk_incidence <- incidence2::incidence(   covid_uk,   date_index = \"date\",   counts = c(\"cases_new\", \"deaths_new\"),   count_names_to = \"count_variable\" )  # View tail of prepared data data <- prepare_data(   covid_uk_incidence,   cases_variable = \"cases_new\",   deaths_variable = \"deaths_new\",   fill_NA = TRUE )  tail(data) #>           date cases deaths #> 485 2021-05-28  6205      6 #> 486 2021-05-29  5146      5 #> 487 2021-05-30  5395      8 #> 488 2021-05-31  6251      6 #> 489 2021-06-01  3346      4 #> 490 2021-06-02     0      0  #### For grouped <incidence2> data #### # convert data to incidence2 object grouped by region covid_uk_incidence <- incidence2::incidence(   covid_uk,   date_index = \"date\",   counts = c(\"cases_new\", \"deaths_new\"),   count_names_to = \"count_variable\",   groups = \"region\" )  # View tail of prepared data data <- prepare_data(   covid_uk_incidence,   cases_variable = \"cases_new\",   deaths_variable = \"deaths_new\",   fill_NA = TRUE )  tail(data) #>            date                   region cases deaths #> 6365 2021-06-02                 Scotland     0      0 #> 6366 2021-06-02               South East     0      0 #> 6367 2021-06-02               South West     0      0 #> 6368 2021-06-02                    Wales     0      0 #> 6369 2021-06-02            West Midlands     0      0 #> 6370 2021-06-02 Yorkshire and The Humber     0      0"}]
