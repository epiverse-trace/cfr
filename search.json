[{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cfr","title":"Contributing to cfr","text":"outlines propose change cfr.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"","what":"Making changes","title":"Contributing to cfr","text":"want make change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See bug report template. feature request see feature request.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Making changes","what":"Pull request process","title":"Contributing to cfr","text":"See pull request template Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"epiverse-trace/cfr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Making changes","what":"Code style","title":"Contributing to cfr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://epiverse-trace.github.io/cfr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cfr","text":"Please note cfr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Estimating disease severity while correcting for reporting delays","text":"disease outbreak underway. want know severe disease , , case fatality ratio, delay cases reported, outcomes cases — whether recovery death — known. reporting delay, can accounted knowing reporting delay past outbreaks.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"what-we-have","dir":"Articles","previous_headings":"","what":"What we have","title":"Estimating disease severity while correcting for reporting delays","text":"dataset daily cases deaths reported; Data distribution reporting delays past outbreaks similar diseases.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"what-we-assume","dir":"Articles","previous_headings":"","what":"What we assume","title":"Estimating disease severity while correcting for reporting delays","text":"data reporting delays past outbreaks informative reporting delays current outbreak.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"case-and-death-data","dir":"Articles","previous_headings":"","what":"Case and death data","title":"Estimating disease severity while correcting for reporting delays","text":"Data cases deaths may obtained number publicly accessible sources, covidregionaldata package data Covid-19 outbreak. outbreak response scenario, data may also compiled shared locally. cfr package requires data frame three columns, “date”, “cases”, “deaths”, giving daily number reported cases deaths. Datasets columns contain information different names can handled common data science tools, packages Tidyverse, prepare data cfr. See examples vignette obtaining static severity estimate. , use data first Ebola outbreak, Democratic Republic Congo 1976, included package (Camacho et al. 2014).","code":"data(\"ebola1976\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"obtaining-data-on-reporting-delays","dir":"Articles","previous_headings":"","what":"Obtaining data on reporting delays","title":"Estimating disease severity while correcting for reporting delays","text":"can access data distribution delays cases reported, deaths recoveries cases known, using convenient epiparameter package. access disease’s ‘onset--death’ distribution recent Ebola outbreak stored package’s parameter library, using function epiparameter::epidist_db() (Barry et al. 2018). <epidist> object can passed functions cfr help correct reporting delays.","code":"library(epiparameter) onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function  # print the object onset_to_death_ebola #> Disease: Ebola Virus Disease #> Pathogen: Ebola Virus-Zaire Subtype #> Epi Distribution: onset to death #> Study: Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375 #> Distribution: gamma #> Parameters: #>   shape: 2.400 #>   scale: 3.333"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"estimate-disease-severity","dir":"Articles","previous_headings":"","what":"Estimate disease severity","title":"Estimating disease severity while correcting for reporting delays","text":"use function estimate_static() calculate overall disease severity latest date outbreak. output dataframe single row three columns holds estimates severity’s mean well lower upper limits. estimate_static() function well suited small outbreaks. larger outbreaks may useful know severity changed time, function estimate_time_varying() available. function however well suited small outbreaks. can found vignette estimating disease severity varies course outbreak.","code":"estimate_static(   data = ebola1976,   correct_for_delays = TRUE,   epi_dist = onset_to_death_ebola ) #>   severity_me severity_lo severity_hi #> 1       0.959       0.842           1"},{"path":"https://epiverse-trace.github.io/cfr/articles/cfr.html","id":"estimate-reporting-rate","dir":"Articles","previous_headings":"","what":"Estimate reporting rate","title":"Estimating disease severity while correcting for reporting delays","text":"important know proportion cases outbreak reported muster appropriate response, estimate overall burden outbreak. estimate_reporting() function can help estimate using daily case death data, known severity disease previous outbreaks, well delay distribution onset--death. , estimate reporting 1976 Ebola outbreak Congo, assuming ebolavirus disease (time) baseline severity 0.7 (70% cases result deaths). analysis suggests 70% 83% cases reported outbreak. details can found vignette estimating proportion cases reported outbreak.","code":"# estimate reporting with a baseline severity of 70% estimate_reporting(   data = ebola1976,   epi_dist = onset_to_death_ebola,   type = \"static\",   severity_baseline = 0.7,   correct_for_delays = TRUE ) #>   reporting_me reporting_lo reporting_hi #> 1     0.729927          0.7    0.8313539"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/data_from_incidence2.html","id":"incidence2-objects-from-linelists","dir":"Articles","previous_headings":"","what":"<incidence2> objects from linelists","title":"Handling data from {incidence2}","text":"first load linelist data 2014 Ebola outbreak provided outbreaks package, create incidence2 object view . prepare <incidence2> object using date_of_onset date_of_outcome columns date indices, grouping outcome. steps use combination functions incidence2 well common data science packages dplyr. example, used fill_NA argument set TRUE; replaces missing case death counts data 0s. default value argument FALSE, however, keeping NAs data causes downstream issues functions estimate_static(). recommend users carefully consider whether can safely fill NAs zeros purposes analysis. load delay distribution epiparameter database <epidist> object. Finally, estimate static case fatality rate correcting delays suing estimate_static() function.","code":"# load ebola dataset from outbreak data(\"ebola_sim_clean\") ebola <- ebola_sim_clean$linelist  # view ebola head(ebola) #>   case_id generation date_of_infection date_of_onset date_of_hospitalisation #> 1  d1fafd          0              <NA>    2014-04-07              2014-04-17 #> 2  53371b          1        2014-04-09    2014-04-15              2014-04-20 #> 3  f5c3d8          1        2014-04-18    2014-04-21              2014-04-25 #> 4  6c286a          2              <NA>    2014-04-27              2014-04-27 #> 5  0f58c4          2        2014-04-22    2014-04-26              2014-04-29 #> 6  49731d          0        2014-03-19    2014-04-25              2014-05-02 #>   date_of_outcome outcome gender           hospital       lon      lat #> 1      2014-04-19    <NA>      f  Military Hospital -13.21799 8.473514 #> 2            <NA>    <NA>      m Connaught Hospital -13.21491 8.464927 #> 3      2014-04-30 Recover      f              other -13.22804 8.483356 #> 4      2014-05-07   Death      f               <NA> -13.23112 8.464776 #> 5      2014-05-17 Recover      f              other -13.21016 8.452143 #> 6      2014-05-07    <NA>      f               <NA> -13.23443 8.468572 # create incidence2 object of ebola deaths ebola <- incidence(   x = ebola,   date_index = c(     onset = \"date_of_onset\",     outcome = \"date_of_outcome\"   ),   groups = \"outcome\" )  # filter for outcomes that are deaths using dplyr::filter --- death counts # also filter for all onsets --- these are the case counts ebola <- filter(   ebola,   (outcome == \"Death\" & count_variable == \"outcome\") |     (count_variable == \"onset\") )  # remove groups using incidence2::regroup() ebola <- regroup(ebola)  # prepare data ebola <- prepare_data(   ebola,   cases_variable = \"onset\",   deaths_variable = \"outcome\",   fill_NA = TRUE ) onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function # estimate static CFR as a sanity check estimate_static(   ebola,   correct_for_delays = TRUE, epi_dist = onset_to_death_ebola ) #>   severity_me severity_lo severity_hi #> 1       0.369       0.354       0.384"},{"path":"https://epiverse-trace.github.io/cfr/articles/data_from_incidence2.html","id":"incidence2-objects-from-aggregated-case-data","dir":"Articles","previous_headings":"<incidence2> objects from linelists","what":"<incidence2> objects from aggregated case data","title":"Handling data from {incidence2}","text":"Aggregated case data provided package covidregionaldata can used cfr directly. usage shown vignettes vignette estimating time-varying severity. show transform data <incidence2> objects, prepare cfr. columns dataset already format can converted <incidence2> object using incidence2::incidence(), handled prepare_data(). code chunks show done. Note grouping structure dataset given “region” variable present <incidence2> object, overridden provide single dataset cases deaths summed across regions date prepare_data(). functionality currently development might change future.","code":"# get data bundled with the {incidence2} package covid_uk <- covidregionaldataUK  # view the data head(covid_uk) #>         date          region region_code cases_new cases_total deaths_new #> 1 2020-01-30   East Midlands   E12000004        NA          NA         NA #> 2 2020-01-30 East of England   E12000006        NA          NA         NA #> 3 2020-01-30         England   E92000001         2           2         NA #> 4 2020-01-30          London   E12000007        NA          NA         NA #> 5 2020-01-30      North East   E12000001        NA          NA         NA #> 6 2020-01-30      North West   E12000002        NA          NA         NA #>   deaths_total recovered_new recovered_total hosp_new hosp_total tested_new #> 1           NA            NA              NA       NA         NA         NA #> 2           NA            NA              NA       NA         NA         NA #> 3           NA            NA              NA       NA         NA         NA #> 4           NA            NA              NA       NA         NA         NA #> 5           NA            NA              NA       NA         NA         NA #> 6           NA            NA              NA       NA         NA         NA #>   tested_total #> 1           NA #> 2           NA #> 3           NA #> 4           NA #> 5           NA #> 6           NA # convert to incidence2 object covid_uk_incidence <- incidence(   covid_uk,   date_index = \"date\",   counts = c(\"cases_new\", \"deaths_new\"),   count_names_to = \"count_variable\" )  # View head of prepared data head(   prepare_data(     covid_uk_incidence,     cases_variable = \"cases_new\",     deaths_variable = \"deaths_new\",     fill_NA = TRUE   ) ) #>         date cases deaths #> 1 2020-01-30     0      0 #> 2 2020-01-31     0      0 #> 3 2020-02-01     0      0 #> 4 2020-02-02     0      0 #> 5 2020-02-03     0      0 #> 6 2020-02-04     0      0"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Estimating the proportion of cases that are reported during an outbreak","text":"vignette outlines function within cfr used estimate proportion cases, infections hospitalisations ascertained. First, load key packages required vignette: four optional packages, run multiple examples last section vignette:","code":"library(cfr) library(epiparameter) library(covidregionaldata) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tidyr) library(purrr) library(scales) #>  #> Attaching package: 'scales' #> The following object is masked from 'package:purrr': #>  #>     discard library(ggplot2) library(forcats)"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Estimating the proportion of cases that are reported during an outbreak","text":"several reasons cases, infections hospitalisations deaths might -ascertained outbreak infectious disease. examples include: Testing capacity criteria sufficient identify infections. Symptom-based testing rather sampling random population. can lead biases due infections either asymptomatic pre-symptomatic phase. Changes case definition time. example, recent COVID-19 pandemic, U.K. roll widespread testing around May 2020. means March April, infections heavily -ascertained. focus period within vignette, illustrates use analysis pipeline well.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"data-required","dir":"Articles","previous_headings":"Methods","what":"Data required","title":"Estimating the proportion of cases that are reported during an outbreak","text":"data required estimate severity disease changes time using cfr package includes: time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially exposed. distributions come literature, studies typically fit distributions data describing process. practice, time-series cases deaths already together, given usually originate sources typically collated single data file. package requires data.frame input data — typically case death time series data — delay distribution. delay distribution use comes epiparameter package.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"estimating-the-proportion-of-cases-or-infections-that-have-been-ascertained","dir":"Articles","previous_headings":"Methods","what":"Estimating the proportion of cases or infections that have been ascertained","title":"Estimating the proportion of cases that are reported during an outbreak","text":"function estimate_reporting() cfr package estimates proportion cases, infections, hospitalisations — whichever proxy infections provide — ascertained. method used within function extends methods outlined previous vignettes estimating severity ongoing outbreak measuring severity changes time. methods based Nishiura et al. (2009) methods estimate severity. extend combining resulting severity estimates assumed baseline severity estimate. proportion cases, infections quantity provided ascertained given ratio assumed true baseline severity estimate delay-adjusted severity estimate. delay-adjusted severity estimates can calculated using either estimate_static() estimate_time_varying() functions.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"example-with-data-from-the-ongoing-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Example with data from the ongoing COVID-19 pandemic in the U.K.","title":"Estimating the proportion of cases that are reported during an outbreak","text":"outline time-varying severity estimation works cfr using number examples. data examples ongoing COVID-19 epidemic. Firstly, analyse U.K. data, pick three countries large outbreaks analyse.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"downloading-the-raw-data","dir":"Articles","previous_headings":"Example with data from the ongoing COVID-19 pandemic in the U.K.","what":"Downloading the raw data","title":"Estimating the proportion of cases that are reported during an outbreak","text":"First , subset data focus just first months COVID-19 outbreak U.K. , test availability changed dramatically result vaccine campaign. download data — using covidregionaldata package — following command: subset data focus just first months outbreak following command:","code":"df_covid_uk <- get_national_data(   countries = \"united kingdom\", source = \"who\", verbose = FALSE )  df_covid_uk <- rename(df_covid_uk, cases = cases_new, deaths = deaths_new) df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-05-31\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"plotting-the-raw-data","dir":"Articles","previous_headings":"Example with data from the ongoing COVID-19 pandemic in the U.K.","what":"Plotting the raw data","title":"Estimating the proportion of cases that are reported during an outbreak","text":"First, plot case incidence data following command: Figure 1: Incidence cases time ongoing COVID-19 outbreak U.K. , plot death incidence data following command: Figure 2: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"darkblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"the-delay-distribution","dir":"Articles","previous_headings":"Example with data from the ongoing COVID-19 pandemic in the U.K.","what":"The delay distribution","title":"Estimating the proportion of cases that are reported during an outbreak","text":"retrieve appropriate distribution — reported Linton et al. (2020) — using epidist_db() function epiparameter package, using following command: visualise distribution, evaluate 0 30 days, plot results time. using following command: Figure 3: Example plot appropriate delay distribution COVID-19 epidemic U.K.plot onset--death distribution use throughout example COVID-19, reported https://doi.org/10.3390/jcm9020538.","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton_etal\" ) #> Warning: More than one study found. Selecting first one. Please report an issue #> with duplicated studies. #> Using Linton et al. (2020) <10.3390/jcm9020538> PMID: 32079150.  #> To retrieve the short citation use the 'get_citation' function plot(onset_to_death_covid, day_range = seq_len(30))"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"estimating-the-proportion-of-cases-that-have-been-ascertained","dir":"Articles","previous_headings":"Example with data from the ongoing COVID-19 pandemic in the U.K.","what":"Estimating the proportion of cases that have been ascertained","title":"Estimating the proportion of cases that are reported during an outbreak","text":"use estimate_reporting() function within cfr package calculate time-varying CFR COVID-19 epidemic U.K: function includes type argument, determines whether estimate_static() estimate_time_varying() used estimate delay-adjusted severity disease used numerator -ascertainment calculation. severity_baseline argument estimate_reporting() determines denominator resulting -ascertainment calculation. arguments found estimate_time_varying(). calculated severity quantities time, visualise results.","code":"df_reporting_static <- estimate_reporting(   data = df_covid_uk_subset,   epi_dist = onset_to_death_covid,   type = \"static\",   severity_baseline = 0.014,   correct_for_delays = TRUE ) df_reporting_varying <- estimate_reporting(   data = df_covid_uk,   epi_dist = onset_to_death_covid,   type = \"varying\",   severity_baseline = 0.014,   smooth_inputs = TRUE,   burn_in_value = 7,   correct_for_delays = TRUE,   max_date = \"2020-06-30\" ) # the static reporting estimate df_reporting_static #>   reporting_me reporting_lo reporting_hi #> 1   0.05982906   0.05932203   0.06008584  # the time-varying reporting estimate df_reporting_varying #>   reporting_me reporting_lo reporting_hi #> 1       0.2346    0.1871687    0.2990665"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_ascertainment.html","id":"example-with-all-countries-with-large-early-covid-19-outbreaks","dir":"Articles","previous_headings":"","what":"Example with all countries with large early COVID-19 outbreaks","title":"Estimating the proportion of cases that are reported during an outbreak","text":"Finally, put ascertainment estimates countries large outbreaks single table summarise results single figure. define large outbreak one caused least 100,000 deaths. focus countries resulting table figure become unwieldy made larger. focus period start outbreak 1st June 2020. period -ascertainment cases infections likely highest, tests still developed made widely available many countries. calculate ascertainment estimates countries large COVID-19 outbreaks 1st June 2020, use following command — codeblock depends package dplyr, ease manipulating large data.frames structured group: , plot results single figure, use following command — codeblock depends commonly used package ggplot2, ease plotting large data.frames: Figure 4: Example plot corrected time-varying CFR. calculate time-varying CFR ongoing COVID-19 epidemic United States, corrected delays.","code":"df_covid <- get_national_data(   source = \"who\", verbose = FALSE ) %>%   rename(cases = cases_new, deaths = deaths_new)  df_covid_subset <- filter(df_covid, date <= \"2020-05-31\") # calculate the total number deaths by country and filter for countries # with 100,000 deaths, and then filter for the first six months of 2020 df_reporting <- df_covid %>%   group_by(iso_code) %>%   mutate(total_deaths = max(deaths_total)) %>%   filter(total_deaths > 100000 & !is.na(country)) %>%   filter(date < \"2020-06-01\") %>%   ungroup()  # nest the data df_reporting <- nest(df_reporting, .by = country)  # calculate the reporting rate in each country using # map on nested dataframes df_reporting <- mutate(   df_reporting,   reporting = map(     .x = data, .f = estimate_reporting,     # arguments to function     epi_dist = onset_to_death_covid, type = \"varying\",     burn_in_value = 7, smooth_inputs = TRUE, correct_for_delays = TRUE   ) )  # unnest the data df_reporting <- unnest(df_reporting, cols = \"reporting\")  # visualise the data head(df_reporting) #> # A tibble: 6 × 5 #>   country   data                reporting_me reporting_lo reporting_hi #>   <chr>     <list>                     <dbl>        <dbl>        <dbl> #> 1 Argentina <tibble [150 × 15]>        0.110       0.0832        0.151 #> 2 Brazil    <tibble [150 × 15]>        0.101       0.0954        0.106 #> 3 China     <tibble [150 × 15]>        1           0.0416        1     #> 4 Colombia  <tibble [150 × 15]>        0.360       0.233         0.593 #> 5 France    <tibble [150 × 15]>        1           0.0869        1     #> 6 Germany   <tibble [150 × 15]>        1           1             1 df_reporting %>%   ggplot() +   geom_pointrange(     aes(       x = fct_reorder(country, reporting_me),       y = reporting_me,       ymin = reporting_lo,       ymax = reporting_hi,       colour = country     )   ) +   coord_flip() +   labs(x = NULL, y = \"Ascertainment Rate\") +   theme(legend.position = \"none\") +   scale_y_continuous(     labels = percent, limits = c(0, 1)   )"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"vignette outlines use cfr calculate disease severity ongoing outbreak. wish estimate one typical severity quantities used epidemiology: case fatality risk (CFR), infection hospitality risk (IFR) hospitalisation fatality risk (HFR). using method uses time series cases, infections hospitalisations (respectively) deaths appropriate delay distribution. methods used originate Nishiura et al. (2009). vignette demonstrates implement core functions within cfr. Specifically, cover naive estimates CFR HFR generated ongoing outbreak require adjusting, given sync time series often compared. Arrive estimates time number symptomatic individuals likely known outcome \\(t\\) days symptom onset Define unbiased estimator estimate CFR HFR Nishiura et al. (2009) Numerically implement unbiased estimator numerically using maximum likelihood estimation arrive central estimates CFR HFR, along confidence interval. Now load three packages need using following commands:","code":"library(cfr) library(epiparameter) library(covidregionaldata) library(dplyr) library(scales) library(ggplot2)"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"Key epidemiological quantities estimated real-time often suffer biases. particular, dividing deaths--date cases--date, infections--date hospitalisations--date leads biased estimates CFR, IFR HFR (respectively). calculation account delays confirmation case, infection hospitalisation--death. perfectly synchronised case death incidence data, basic versions CFR, IFR HFR — defined either ratio total number deaths total number cases, infections hospitalisations — accurate. basic estimates referred naive estimators. However, due delays onset hospitalisation death known diseases, synchronisation never true. example, suppose 10 people start showing symptoms specific disease given day end day remain alive. Suppose next 5 days, numbers new cases continue rise reach 100 new cases day 5. However, suppose day 5, infected individuals remain alive. naive estimate CFR zero calculated end first 5 days zero, zero deaths total. Even deaths begin occur, lag ascertainment case hospitalisation outcome leads consistently biased estimate. Hence, adjusting delays using appropriate delay distribution essential accurate estimates severity.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"data-required","dir":"Articles","previous_headings":"Methods","what":"Data required","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"data required estimate severity disease ongoing outbreak using cfr package includes: time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially exposed. distributions come literature, studies typically fit distributions data describing process. practice, time-series cases deaths already together, given usually originate sources typically collated single data file. function within cfr used estimate severity disease single time-point — estimate_static() — requires data.frame input data — typically case death time series data — delay distribution. delay distribution use comes epiparameter package.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"adjusting-for-delays-between-the-two-time-series","dir":"Articles","previous_headings":"Methods","what":"Adjusting for delays between the two time series","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"method used function follows Nishiura et al. (2009). function calculates quantity \\(u_t\\) day within input data, represents proportion cases known outcome, day \\(t\\). Following Nishiura et al., \\(u_t\\) calculated following way: \\[\\begin{equation}   u_t = \\frac{\\sum_{= 0}^t         \\sum_{j = 0}^\\infty c_i f_{j - }}{\\sum_{= 0} c_i}, \\end{equation}\\] \\(f_t\\) value probability mass function time \\(t\\) \\(c_t\\), \\(d_t\\) number new cases new deaths time \\(t\\), (respectively). use \\(u_t\\) end outbreak following likelihood function estimate severity disease question. \\[\\begin{equation}   L(\\theta | y) = \\log{\\binom{u_tC}{D}} + D \\log{\\theta} +   (u_tC - D)\\log{(1.0 - \\theta)}, \\end{equation}\\] \\(C\\) \\(D\\) cumulative number cases deaths (respectively) time \\(t\\). Lastly, \\(\\theta\\) parameter wish estimate, severity disease. estimate \\(\\theta\\) using simple maximum-likelihood methods, allowing functions within package quick easy tools use.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"interpreting-the-estimates","dir":"Articles","previous_headings":"Methods","what":"Interpreting the estimates","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"precise severity measure — CFR, IFR, HFR, etc — represents depends upon input data given user. complete clarity, common time series users might calculate severity resulting severity estimate data: :Case death incidence data, case--death delay distribution (close approximation, onset--death) — Case Fatality Risk (CFR). :Infection death incidence data, exposure--death delay distribution (close approximation). :Hospitalisation Fatality Risk (HFR) — Hospitalisation death incidence data, delay distribution (close approximation).","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"severity-of-the-1976-ebola-outbreak","dir":"Articles","previous_headings":"","what":"Severity of the 1976 Ebola Outbreak","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"use case death incidence data 1976 Ebola outbreak Democratic overall severity Ebola. though roughly half way outbreak, emulating methods presented package arguably useful. First , plot data entire outbreak. subset data, keeping first half time series, order emulate attempting calculate severity disease effects long lag-times case detection death serious.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"plotting-the-raw-data","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Plotting the raw data","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"First , load raw data. , plot case incidence data following command: Figure 1: Incidence cases time, taken 1976 Ebola outbreak Democratic Republic Congo. Data retrieved within cfr package. Lastly, plot death incidence data following command: Figure 2: Incidence deaths time dataset Figure 1. focus roughly first half dataset. subsetting data include days 30th September 1976, using dplyr::filter().","code":"data(\"ebola1976\") ggplot(ebola1976) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"darkblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   labs(     x = \"Date\", y = \"Cases\"   ) ggplot(ebola1976) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   labs(     x = \"Date\", y = \"Deaths\"   ) df_ebola_subset <- dplyr::filter(ebola1976, date <= \"1976-09-30\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"the-delay-distribution","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"The delay distribution","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"example, given using case data detection case well-approximated symptom onset, use distribution describing delay onset--death. , retrieve distribution literature (Barry et al. 2018) using epidist_db() function epiparameter package following command: visualise distribution, evaluate 0 30 days, plot results time using appropriate plot method epiparameter package. Figure 3: Example plot appropriate delay distribution 1976 Ebola dataset.** plot onset--death distribution use throughout example Ebola Virus Disease (EVD), reported .","code":"onset_to_death_ebola <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function plot(onset_to_death_ebola, day_range = seq_len(30), vb = FALSE)"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-incidence-of-cases-or-similar-time-series-with-a-known-outcome","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Estimating incidence of cases (or similar time-series) with a known outcome","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"function known_outcomes() cfr package estimates number cases known outcome time. resulting data frame contains two new columns, “known_outcomes”, number known outcomes (deaths) expected day, “u_t”, -reporting factor estimates proportion cases reported, given estimated number known outcomes. Figure 4: case death time series 1976 Ebola outbreak D.R.C., estimated known outcomes included.","code":"# calculate known outcomes df_known_outcomes_ebola <- known_outcomes(   data = df_ebola_subset,   epi_dist = onset_to_death_ebola )  # visualise head of data frame head(df_known_outcomes_ebola) #>         date cases deaths known_outcomes        u_t #> 1 1976-08-25     1      0     0.00000000 0.00000000 #> 2 1976-08-26     0      0     0.03316057 0.03316057 #> 3 1976-08-27     0      0     0.06482994 0.09799050 #> 4 1976-08-28     0      0     0.08472567 0.18271617 #> 5 1976-08-29     0      0     0.09389465 0.27661082 #> 6 1976-08-30     0      0     0.09506629 0.37167711 # plot cases and known outcomes as separate layers ggplot(df_known_outcomes_ebola) +   geom_step(     aes(       x = date, y = cases,       colour = \"Cases\"     )   ) +   geom_step(     aes(       x = date, y = known_outcomes,       colour = \"Known outcomes\"     )   ) +   scale_colour_manual(     values = c(       \"Cases\" = \"darkblue\",       \"Known outcomes\" = \"darkgreen\"     ),     name = NULL   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Date\", y = \"No. of individuals\"   )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-the-naive-and-corrected-cfr","dir":"Articles","previous_headings":"Severity of the 1976 Ebola Outbreak","what":"Estimating the naive and corrected CFR","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"calculate proportion cases known outcomes, apply proportion number cases correct delay onset--death. using function estimate_static() cfr package. function estimates proportion known outcomes time, uses estimate correct naive severity estimate. controlled using correct_for_delays boolean flag argument estimate_static() function. Otherwise, calculates naive severity estimate, adjust delays simply total number deaths dataset divided total number cases. run function naive corrected estimates using following two commands (respectively):","code":"# calculating the naive CFR estimate_static(   data = df_ebola_subset,   correct_for_delays = FALSE ) #>   severity_me severity_lo severity_hi #> 1   0.7197802   0.6485503   0.7836984  # calculating the corrected CFR estimate_static(   df_ebola_subset,   correct_for_delays = TRUE,   epi_dist = onset_to_death_ebola ) #>   severity_me severity_lo severity_hi #> 1           1        0.87           1"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"severity-of-the-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Severity of the COVID-19 pandemic in the U.K.","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"now perform similar analysis steps, data taken ongoing COVID-19 epidemic U.K. brevity, describe steps without methodological explanations throughout example.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"plotting-the-raw-data-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Plotting the raw data","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"First , subset data focus just first year COVID-19 outbreak U.K. , CFR changed dramatically result vaccine campaign. static severity calculations performing vignette able deal changes severity time. download data — using covidregionaldata package — change default column names match required cfr subset data.frame focus first year pandemic U.K., following commands: , plot subsetted case data following command: Figure 5: Incidence cases time ongoing COVID-19 outbreak U.K. , plot subsetted death data following command: Figure 6: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"df_covid_uk <- get_national_data(   countries = \"united kingdom\", source = \"who\", verbose = FALSE )  df_covid_uk <- rename(   df_covid_uk,   cases = cases_new, deaths = deaths_new )  df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-12-31\") ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"darkblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"the-delay-distribution-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"The delay distribution","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"retrieve appropriate distribution Linton et al. (2020) using epidist_db() function epiparameter package, using following command. visualise distribution, evaluate 0 30 days, plot results time. using following command: Figure 7: Example plot appropriate delay distribution COVID-19 epidemic U.K. plot onset--death distribution use throughout example COVID-19, reported .","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton_etal\" ) plot(onset_to_death_covid, day_range = seq_len(30), vb = FALSE)"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-incidence-of-cases-with-a-known-outcome","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Estimating incidence of cases with a known outcome","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"use method implementation Ebola example calculate number known outcomes time, using following command: Figure 8: case time series ongoing COVID-19 epidemic U.K., estimated known outcomes included.","code":"df_known_outcomes_covid <- known_outcomes(   data = df_covid_uk_subset,   epi_dist = onset_to_death_covid ) ggplot(df_known_outcomes_covid) +   geom_step(     aes(       x = date, y = cases,       colour = \"Cases\"     )   ) +   geom_step(     aes(       x = date, y = known_outcomes,       colour = \"Known outcomes\"     )   ) +   scale_colour_manual(     values = c(       \"Cases\" = \"darkblue\",       \"Known outcomes\" = \"darkgreen\"     ),     name = NULL   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Date\", y = \"No. of individuals\"   )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_static_severity.html","id":"estimating-the-naive-and-corrected-cfr-1","dir":"Articles","previous_headings":"Severity of the COVID-19 pandemic in the U.K.","what":"Estimating the naive and corrected CFR","title":"Calculating disease severity by adjusting for delays between onset and outcomes","text":"Finally, calculate naive corrected CFRs COVID-19 epidemic U.K.","code":"# calculating the naive CFR estimate_static(   df_covid_uk_subset,   correct_for_delays = FALSE ) #>   severity_me severity_lo severity_hi #> 1  0.03640129  0.03617236  0.03663127  # calculating the corrected CFR estimate_static(   df_covid_uk_subset,   correct_for_delays = TRUE,   epi_dist = onset_to_death_covid ) #>   severity_me severity_lo severity_hi #> 1       0.046       0.046       0.047"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Estimating how disease severity varies over the course of an outbreak","text":"vignette outlines use cfr estimate severity disease changes course ongoing outbreak. wish estimate common severity quantities change time: case fatality risk (CFR), infection hospitality risk (IFR) hospitalisation fatality risk (HFR). using method analyses time series cases outcomes appropriate delay distribution. methods used documented Nishiura et al. (2009). First, load five essential packages needed vignette: four optional packages, run multiple examples last section vignette:","code":"library(cfr) library(epiparameter) library(covidregionaldata) library(dplyr) library(tidyr) library(purrr) library(scales) library(ggplot2)"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Estimating how disease severity varies over the course of an outbreak","text":"many biological, epidemiological behavioural reasons severity disease might change course outbreak. list common reasons : introduction vaccines therapeutics, reducing relative risk death compared infection. emergence pathogen variants, may alter risk hospitalisation death associated infection. example, suppose new variant currently circulating pathogen emerged. Typically, estimating severity newly emerged variant critical importance surveillance planning purposes. Running estimate_static() function datasets corresponding outbreaks caused two variants lead two static estimates, may may differ. useful, detailed easier interpret approach use function demonstrated vignette: estimate_time_varying().","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"data-required","dir":"Articles","previous_headings":"Methods","what":"Data required","title":"Estimating how disease severity varies over the course of an outbreak","text":"data required estimate severity disease changes time using cfr package includes: time-series cases, hospitalisations proxy infections time; time-series deaths; delay distribution, describing probability individual die \\(t\\) days initially exposed. distributions come literature, studies typically fit distributions data describing process. practice, time-series cases deaths already together, given usually originate sources typically collated single data file. package requires data.frame input data — typically case death time series data — delay distribution. delay distribution use comes epiparameter package.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"adjusting-for-delays-between-the-two-time-series","dir":"Articles","previous_headings":"Methods","what":"Adjusting for delays between the two time series","title":"Estimating how disease severity varies over the course of an outbreak","text":"function estimate_time_varying() cfr package estimates number cases known outcome time. method used within function follows Nishiura et al. (2009). function calculates quantity \\(k_t\\) day within input data, represents number cases known outcome, day \\(t\\). Following Nishiura et al., \\(k_t\\) calculated following way: \\[\\begin{equation}   k_t = \\sum_{j = 0}^t c_t f_{j - t}. \\end{equation}\\] assume severity measure, example CFR, interest Binomially-distributed, following way \\[\\begin{equation}   d_t \\sim \\text{Binomial}(k_t, \\theta_t). \\end{equation}\\] use maximum-likelihood techniques determine value \\(\\theta_t\\) \\(t\\), whereby \\(\\theta\\) represents severity measure interest.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"interpreting-the-estimates","dir":"Articles","previous_headings":"Methods","what":"Interpreting the estimates","title":"Estimating how disease severity varies over the course of an outbreak","text":"precise severity measure — CFR, IFR, HFR, etc — \\(\\theta\\) represents depends upon input data given user. complete clarity, common time series users might calculate severity resulting severity estimate data: Case death incidence data, case--death delay distribution (close approximation, onset--death). result Case Fatality Risk (CFR) estimate. Infection death incidence data, exposure--death delay distribution (close approximation). result Infection Fatality Risk (IFR) estimate. Hospitalisation death incidence data, hospitalisation--death delay distribution (close approximation). result Hospitalisation Fatality Risk (HFR) estimate.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"changing-severity-of-the-covid-19-pandemic-in-the-u-k-","dir":"Articles","previous_headings":"","what":"Changing severity of the COVID-19 pandemic in the U.K.","title":"Estimating how disease severity varies over the course of an outbreak","text":"outline time-varying severity estimation works cfr using number examples. data examples ongoing COVID-19 epidemic. Firstly, analyse U.K. data, pick three countries large outbreaks analyse.","code":""},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"downloading-the-raw-data","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Downloading the raw data","title":"Estimating how disease severity varies over the course of an outbreak","text":"First , subset data focus just first year COVID-19 outbreak U.K. , CFR changed dramatically result number factors: changes policy, implementation relaxation lockdown; rollout vaccine; new variants emerging, etc. download data — using covidregionaldata package — following command: subset data focus just first months outbreak following command:","code":"df_covid_uk <- get_national_data(   countries = \"united kingdom\", source = \"who\", verbose = FALSE )  df_covid_uk <- rename(df_covid_uk, cases = cases_new, deaths = deaths_new) df_covid_uk_subset <- filter(df_covid_uk, date <= \"2020-12-31\")"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"plotting-the-raw-data","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Plotting the raw data","title":"Estimating how disease severity varies over the course of an outbreak","text":"First, plot case incidence data following command: Figure 1: Incidence cases time ongoing COVID-19 outbreak U.K. , plot death incidence data following command: Figure 2: Incidence deaths time ongoing COVID-19 outbreak U.K.","code":"ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = cases     ),     colour = \"darkblue\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Cases\"   ) ggplot(df_covid_uk_subset) +   geom_step(     aes(       x = date, y = deaths     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = comma   ) +   labs(     x = \"Date\", y = \"Deaths\"   )"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"the-delay-distribution","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"The delay distribution","title":"Estimating how disease severity varies over the course of an outbreak","text":"retrieve appropriate distribution reported Linton et al. (2020) using epidist_db() function epiparameter package, using following command: visualise distribution, evaluate 0 30 days, plot results time. using following command: Figure 3: Example plot appropriate delay distribution COVID-19 epidemic U.K.** plot onset--death distribution use throughout example COVID-19, reported https://doi.org/10.3390/jcm9020538.","code":"onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton_etal\" ) plot(onset_to_death_covid, day_range = seq(30))"},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"estimating-the-naive-and-corrected-cfr","dir":"Articles","previous_headings":"Changing severity of the COVID-19 pandemic in the U.K.","what":"Estimating the naive and corrected CFR","title":"Estimating how disease severity varies over the course of an outbreak","text":"use estimate_time_varying() function within cfr package calculate time-varying CFR COVID-19 epidemic U.K: calculated severity quantities time, plot results. First plot naive estimate, uncorrected delays: Figure 4: Example plot naive time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic U.K., uncorrected delays. Lastly, plot corrected — delays — estimate: Figure 5: Example plot corrected time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic U.K., corrected delays.","code":"# calculating the naive time-varying CFR df_covid_cfr_uk_naive <- estimate_time_varying(   df_covid_uk_subset,   epi_dist = onset_to_death_covid,   smooth_inputs = TRUE,   burn_in = 7,   correct_for_delays = FALSE )  df_covid_cfr_uk_corrected <- estimate_time_varying(   df_covid_uk_subset,   epi_dist = onset_to_death_covid,   smooth_inputs = TRUE,   burn_in = 7,   correct_for_delays = TRUE ) ggplot(df_covid_cfr_uk_naive) +   geom_ribbon(     aes(       x = date, ymin = severity_lo, ymax = severity_hi     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_me     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) #> Warning: Removed 30 rows containing missing values (`geom_line()`). ggplot(df_covid_cfr_uk_corrected) +   geom_ribbon(     aes(       x = date, ymin = severity_lo, ymax = severity_hi     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_me     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) #> Warning: Removed 47 rows containing missing values (`geom_line()`)."},{"path":"https://epiverse-trace.github.io/cfr/articles/estimate_time_varying_severity.html","id":"severity-of-covid-19-in-multiple-countries","dir":"Articles","previous_headings":"","what":"Severity of COVID-19 in multiple countries","title":"Estimating how disease severity varies over the course of an outbreak","text":"section uses functions dplyr package. two reasons: covidregionaldata, package use download raw data, downloads tibble, -built data.frame class dplyr package package includes functions allow user easily map function across one tibble, separated groups. case, wish run estimate_time_varying() function across countries. tibble contains data countries. make separate tibble country wish run. However, package dplyr already contains functionality run function across large tibble, separated group, use . Furthermore, dplyr, part tidyverse common package, many users already installed. First , retrieve daily case death data COVID-19 countries, using covidregionaldata package: Next, run dplyr commands group data map estimate_time_varying() function across group within tibble. focus dplyr commands vignette. Instead, refer user dplyr documentation. Note code takes moments run. Note, simplicity, use delay distribution onset death locations. plot time-varying CFR selection three countries large outbreaks COVID-19. First , plot time-varying CFR estimate COVID-19 outbreak Brazil: Figure 6: Example plot corrected time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic Brazil, corrected delays. Next, plot time-varying CFR estimate COVID-19 outbreak India: Figure 7: Example plot corrected time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic Germany deaths total, corrected delays. Next, plot time-varying CFR estimate COVID-19 outbreak United States: Figure 8: Example plot corrected time-varying CFR.** calculate time-varying CFR ongoing COVID-19 epidemic United States, corrected delays. Finally, plot countries calculated time-varying CFR , using package ggplot2, contains facet_wrap() function. allows us loop different countries ease. following commands: Figure 9: corrected time-varying CFR country large outbreak. calculate time-varying CFR ongoing COVID-19 epidemic country large outbreak — defined country 100,000 deaths total — corrected delays. focus ggplot2 commands vignette. Instead, refer user ggplot2 documentation .","code":"df_covid <- get_national_data(   source = \"who\", verbose = FALSE )  df_covid <- rename(df_covid, cases = cases_new, deaths = deaths_new) # get the total number of deaths in each country with more than 100,000 deaths df_covid_cfr <- df_covid %>%   group_by(iso_code) %>%   mutate(total_deaths = max(deaths_total)) %>%   filter(total_deaths > 100000 & !is.na(country)) %>%   ungroup()  # for each country, get the time-varying severity estimate, # correcting for delays and smoothing the case and death data  # first nest the data df_covid_cfr <- nest(   df_covid_cfr,   .by = country )  # to each nested data frame, apply the function `estimate_time_varying` # overwrite the `data` column, as all data will be preserved df_covid_cfr <- mutate(   df_covid_cfr,   data = map(     .x = data, .f = estimate_time_varying,     # arguments to the function     epi_dist = onset_to_death_covid, smooth_inputs = TRUE,     smoothing_window = 7, burn_in = 7   ) )  # unnest the cfr data df_covid_cfr <- unnest(df_covid_cfr, cols = data) filter(df_covid_cfr, country == \"Brazil\") %>%   ggplot() +   geom_ribbon(     aes(       x = date, ymin = severity_lo, ymax = severity_hi     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_me     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) #> Warning: Removed 190 rows containing missing values (`geom_line()`). filter(df_covid_cfr, country == \"Germany\") %>%   ggplot() +   geom_ribbon(     aes(       x = date, ymin = severity_lo, ymax = severity_hi     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_me     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning: Removed 1287 rows containing missing values (`geom_line()`). filter(df_covid_cfr, country == \"United States\") %>%   ggplot() +   geom_ribbon(     aes(       x = date, ymin = severity_lo, ymax = severity_hi     ),     fill = \"grey75\"   ) +   geom_line(     aes(       x = date, y = severity_me     ),     colour = \"red\"   ) +   scale_x_date(     date_labels = \"%d-%b-%Y\"   ) +   scale_y_continuous(     labels = percent   ) +   labs(     x = \"Date\", y = \"CFR (%)\"   ) #> Warning: Removed 294 rows containing missing values (`geom_line()`). df_covid_cfr %>%   ggplot(     aes(x = date)   ) +   geom_line(aes(y = severity_me), linetype = \"dashed\", alpha = 0.25) +   geom_ribbon(     aes(       ymin = severity_lo,       ymax = severity_hi     ),     fill = \"dodgerblue\", alpha = 0.5   ) +   coord_cartesian(clip = \"off\") +   facet_wrap(facets = vars(country), ncol = 2) +   theme_minimal() +   labs(x = \"Date\", y = \"CFR (%)\") +   scale_y_continuous(labels = percent, limits = c(0, 0.1)) #> Warning: Removed 326 rows containing missing values (`geom_line()`). #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf  #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf  #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf  #> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder. Adam Kucharski. Author, copyright holder. Tim Russell. Author, copyright holder. Joshua W. Lambert. Reviewer. Hugo Gruson. Reviewer. Tim Taylor. Reviewer.","code":""},{"path":"https://epiverse-trace.github.io/cfr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Kucharski , Russell T (2023). cfr: Estimate Disease Severity -reporting. https://github.com/epiverse-trace/cfr, https://epiverse-trace.github.io/cfr/.","code":"@Manual{,   title = {cfr: Estimate Disease Severity and Under-reporting},   author = {Pratik Gupte and Adam Kucharski and Tim Russell},   year = {2023},   note = {https://github.com/epiverse-trace/cfr, https://epiverse-trace.github.io/cfr/}, }"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"cfr-estimate-disease-severity-and-under-reporting-","dir":"","previous_headings":"","what":"Estimate Disease Severity and Under-reporting","title":"Estimate Disease Severity and Under-reporting","text":"cfr R package estimate disease severity -reporting real-time, accounting delays epidemic time-series. cfr provides simple, fast methods calculate overall static case fatality ratio (CFR) outbreak given time point, well CFR changes course outbreak. cfr can help estimate disease -reporting real-time, accounting delays reporting outcomes cases. cfr implements methods outlined Nishiura et al. (2009), CFR estimates based methods likely added. cfr uses epiparameter package delay-corrected CFR estimates, packages developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE initiative.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Disease Severity and Under-reporting","text":"current development version cfr can installed GitHub using pak package.","code":"if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/cfr\")  # Also install R package {epiparameter} for epidemiological parameter values pak::pak(\"epiverse-trace/epiparameter\")"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"overall-severity-of-the-1976-ebola-outbreak","dir":"","previous_headings":"Quick start","what":"Overall severity of the 1976 Ebola outbreak","title":"Estimate Disease Severity and Under-reporting","text":"example basic usage shows use cfr estimate overall case fatality ratios 1976 Ebola outbreak (Camacho et al. 2014).","code":"# Load package library(cfr)  # Load the Ebola 1976 data provided with the package data(\"ebola1976\")  # read delay distribution for ebolavirus onset to death from {epiparameter} # accesses parameters reported in https://doi.org/10.1016/S0140-6736(18)31387-4 onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" )  # Calculate the static CFR without correcting for delays estimate_static(data = ebola1976) #>   severity_me severity_lo severity_hi #> 1    0.955102   0.9210866   0.9773771  # Calculate the static CFR while correcting for delays estimate_static(   data = ebola1976,   correct_for_delays = TRUE,   epi_dist = onset_to_death_ebola ) #>   severity_me severity_lo severity_hi #> 1       0.959       0.842           1"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"change-in-real-time-estimates-of-overall-severity-during-the-1976-ebola-outbreak","dir":"","previous_headings":"Quick start","what":"Change in real-time estimates of overall severity during the 1976 Ebola outbreak","title":"Estimate Disease Severity and Under-reporting","text":"example show estimate overall severity can change data cases deaths time becomes available, using function estimate_rolling(). delay onset--death, simple “naive” calculation just divides deaths--date cases--date underestimate severity. estimate_rolling() function uses estimate_severity() adjustment account delays, instead compares deaths--date cases--known-outcome--date. example shows adjusted estimate converges “naive” estimate outbreak declines, hence larger large proportion cases known outcomes. plot rolling CFR visualise severity changes time, using ggplot2 package. plotting code hidden . Disease severity ebola 1976 outbreak estimated day epidemic. rolling CFR value converges static value towards end outbreak. corrected uncorrected estimates shown.","code":"# Calculate the CFR without correcting for delays on each day of the outbreak rolling_cfr_naive <- estimate_rolling(   data = ebola1976, )  # add the date from the outbreak rolling_cfr_naive <- cbind(date = ebola1976[, \"date\"], rolling_cfr_naive)  # see the first few rows head(rolling_cfr_naive) #>         date severity_me severity_lo severity_hi #> 1 1976-08-25           0           0       0.975 #> 2 1976-08-26           0           0       0.975 #> 3 1976-08-27           0           0       0.975 #> 4 1976-08-28           0           0       0.975 #> 5 1976-08-29           0           0       0.975 #> 6 1976-08-30           0           0       0.975  # Calculate the rolling daily CFR while correcting for delays rolling_cfr_corrected <- estimate_rolling(   data = ebola1976, correct_for_delays = TRUE,   epi_dist = onset_to_death_ebola )  # add the date from the outbreak rolling_cfr_corrected <- cbind(date = ebola1976[, \"date\"], rolling_cfr_corrected)  head(rolling_cfr_corrected) #>         date severity_me severity_lo severity_hi #> 1 1976-08-25       0.001          NA          NA #> 2 1976-08-26       0.001       0.001       0.999 #> 3 1976-08-27       0.001       0.001       0.999 #> 4 1976-08-28       0.001       0.001       0.999 #> 5 1976-08-29       0.001       0.001       0.999 #> 6 1976-08-30       0.001       0.001       0.994"},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package vignettes","title":"Estimate Disease Severity and Under-reporting","text":"details use cfr can found online documentation package vignettes, “Articles”.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Estimate Disease Severity and Under-reporting","text":"report bug please open issue.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Estimate Disease Severity and Under-reporting","text":"Contributions cfr welcomed. Please follow package contributing guide.","code":""},{"path":"https://epiverse-trace.github.io/cfr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Estimate Disease Severity and Under-reporting","text":"Please note cfr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":null,"dir":"Reference","previous_headings":"","what":"Ebola 1976 outbreak case data — ebola1976","title":"Ebola 1976 outbreak case data — ebola1976","text":"example epidemic outbreak dataset use cfr package. dataset comes first Ebola outbreak Zaire 1976 analysed Camacho et al. (2014).","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ebola 1976 outbreak case data — ebola1976","text":"","code":"ebola1976"},{"path":[]},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"ebola-","dir":"Reference","previous_headings":"","what":"ebola1976","title":"Ebola 1976 outbreak case data — ebola1976","text":"data frame 73 rows 60 columns: date Calendar date cases Number cases reported deaths Number deaths reported","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/ebola1976.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ebola 1976 outbreak case data — ebola1976","text":"doi:10.1016/j.epidem.2014.09.003","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_reporting.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","title":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","text":"Estimates proportion cases infections ascertained (declared official cases), given time-series cases deaths, delay distribution baseline severity estimate. resulting ascertainment estimate calculated ratio baseline severity estimate delay-adjusted severity estimate","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_reporting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","text":"","code":"estimate_reporting(   data,   epi_dist = NULL,   type = c(\"static\", \"varying\"),   severity_baseline = 0.014,   burn_in_value = get_default_burn_in(epi_dist),   smooth_inputs = FALSE,   smoothing_window = 1,   correct_for_delays = FALSE,   max_date = NULL )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_reporting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","text":"data data.frame containing outbreak data. daily time series dates absolute indicator time (e.g. epiday/epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note data.frame required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution. type string, either \"static\" \"varying\" determines whether estimate_static() estimate_time_varying() used calculate resulting ascertainment rate severity_baseline assumed true baseline severity estimate used final ratio estimate overall ascertainment rate burn_in_value number time-points (typically days) disregard start time-series, burn-period desired. default value set mean central spread <epidist> object passed function, assuming temporal resolution daily. Alternatively, sensible value might 7, disregard first week cases deaths. consider case data including start time-series, set argument 1. smooth_inputs boolean flag determining whether user wishes smooth case death time-series, using moving average procedure calculating time-varying severity. Useful noisy time-series time-series strong reporting (e.g., weekend) effects smoothing_window odd number determining smoothing window size use smoothing case death time-series, using moving average procedure calculating time-varying severity. Useful noisy time-series time-series strong reporting (e.g., weekend) effects. default value 1 smoothing. Values > 1 apply smoothing. correct_for_delays boolean flag indicating whether user wishes correct delay case detection death. FALSE corresponds naive severity calculated, TRUE corresponds user calculating corrected severity max_date string representing user supplied maximum date, time-varying severity estimate calculated. Useful case long time-series, user wishes focus specific time-period","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_reporting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","text":"data.frame containing MLE estimate 95% confidence interval corrected severity","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_reporting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the ascertainment rate of a disease given a baseline (assumed to be\ntrue) severity estimate — estimate_reporting","text":"","code":"library(cfr) library(epiparameter) library(covidregionaldata)  df_covid_uk <- get_national_data(   countries = \"united kingdom\", source = \"who\", verbose = FALSE ) # rename columns colnames(df_covid_uk)[colnames(df_covid_uk) == \"cases_new\"] <- \"cases\" colnames(df_covid_uk)[colnames(df_covid_uk) == \"deaths_new\"] <- \"deaths\"  df_covid_uk_subset <- subset(df_covid_uk, date <= \"2020-05-31\")  onset_to_death_covid <- epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset_to_death\",   author = \"Linton_etal\" ) #> Warning: More than one study found. Selecting first one. Please report an issue with duplicated studies. #> Using Linton et al. (2020) <10.3390/jcm9020538> PMID: 32079150.  #> To retrieve the short citation use the 'get_citation' function  estimate_reporting(   data = df_covid_uk,   epi_dist = onset_to_death_covid,   type = \"varying\",   severity_baseline = 0.014,   smooth_inputs = TRUE,   burn_in_value = 7L,   correct_for_delays = TRUE,   max_date = \"2020-06-30\" ) #>   reporting_me reporting_lo reporting_hi #> 1       0.2346    0.1871687    0.2990665"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate static severity for an expanding time series — estimate_rolling","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"Calculates CFR time point case death time series supplied, using expanding window time. static CFR calculated time point, using time series start time point, increasing number time points included one iteration.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"","code":"estimate_rolling(   data,   correct_for_delays = FALSE,   epi_dist = NULL,   poisson_threshold = 100 )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"data data.frame containing outbreak data. daily time series dates absolute indicator time (e.g. epiday/epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note data.frame required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. correct_for_delays boolean flag indicating whether user wishes correct delay case detection death. FALSE corresponds naive severity calculated, TRUE corresponds user calculating corrected severity epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution. poisson_threshold case count use Poisson approximation. Set 200 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"data.frame MLE 95% confidence interval daily severity estimates, named \"severity_me\", \"severity_lo\", \"severity_hi\", one row day original data.frame.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"correct_for_delays TRUE, internal function estimate_severity() used calculate rolling severity.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_rolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate static severity for an expanding time series — estimate_rolling","text":"","code":"# load package data data(\"ebola1976\")  # get an onset to death distribution from the {epiparameter} package onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function  # estimate severity without correcting for delays estimate_static(   ebola1976,   correct_for_delays = FALSE ) #>   severity_me severity_lo severity_hi #> 1    0.955102   0.9210866   0.9773771  # estimate severity for each day while correcting for delays # view only the first values head(   estimate_rolling(     ebola1976,     correct_for_delays = TRUE,     epi_dist = onset_to_death_ebola   ) ) #>   severity_me severity_lo severity_hi #> 1       0.001          NA          NA #> 2       0.001       0.001       0.999 #> 3       0.001       0.001       0.999 #> 4       0.001       0.001       0.999 #> 5       0.001       0.001       0.999 #> 6       0.001       0.001       0.994"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the corrected case fatality rate — estimate_severity","title":"Estimate the corrected case fatality rate — estimate_severity","text":"Estimate maximum likelihood estimate 95% confidence interval corrected severity, using total cases total cases known outcomes, latter replaces total number deaths standard (naive) severity definition. use binomial likelihood, approximated Poisson likelihood large samples","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the corrected case fatality rate — estimate_severity","text":"","code":"estimate_severity(   total_cases,   total_deaths,   total_outcomes,   poisson_threshold = 100 )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the corrected case fatality rate — estimate_severity","text":"total_cases total number cases observed period outbreak interest. total number cases must greater equal total number deaths. total_deaths total number deaths observed period outbreak interest. total number deaths must less equal total number cases. total_outcomes total number outcomes estimated observed period outbreak interest. See known_outcomes(). poisson_threshold case count use Poisson approximation. Set 200 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_severity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the corrected case fatality rate — estimate_severity","text":"data.frame MLE 95% confidence interval corrected severity estimates, named \"severity_me\", \"severity_low\", \"severity_high\".","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a static (in time) severity measure — estimate_static","title":"Estimate a static (in time) severity measure — estimate_static","text":"Calculates severity disease, corrected user-specified delay. cases supplied, delay distribution representing delay case detection death, case fatality ratio time estimated","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a static (in time) severity measure — estimate_static","text":"","code":"estimate_static(   data,   correct_for_delays = FALSE,   epi_dist = NULL,   poisson_threshold = 100 )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a static (in time) severity measure — estimate_static","text":"data data.frame containing outbreak data. daily time series dates absolute indicator time (e.g. epiday/epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note data.frame required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. correct_for_delays boolean flag indicating whether user wishes correct delay case detection death. FALSE corresponds naive severity calculated, TRUE corresponds user calculating corrected severity epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution. poisson_threshold case count use Poisson approximation. Set 200 default.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a static (in time) severity measure — estimate_static","text":"data.frame MLE 95% confidence interval severity estimates, named \"severity_me\", \"severity_lo\", \"severity_hi\".","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_static.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a static (in time) severity measure — estimate_static","text":"","code":"# load package data data(\"ebola1976\")  # get an onset to death distribution from the {epiparameter} package onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function  # estimate severity without correcting for delays estimate_static(   ebola1976,   correct_for_delays = FALSE ) #>   severity_me severity_lo severity_hi #> 1    0.955102   0.9210866   0.9773771  # estimate severity while correcting for delays estimate_static(   ebola1976,   correct_for_delays = TRUE,   epi_dist = onset_to_death_ebola ) #>   severity_me severity_lo severity_hi #> 1       0.959       0.842           1"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_time_varying.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate known outcomes from case and death time-series data — estimate_time_varying","title":"Estimate known outcomes from case and death time-series data — estimate_time_varying","text":"Calculates severity disease changes time, corrected user-specified delay. cases supplied, delay distribution representing delay case detection death, case fatality ratio time estimated","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_time_varying.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate known outcomes from case and death time-series data — estimate_time_varying","text":"","code":"estimate_time_varying(   data,   epi_dist = NULL,   burn_in_value = get_default_burn_in(epi_dist),   smooth_inputs = FALSE,   smoothing_window = 1,   correct_for_delays = FALSE )"},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_time_varying.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate known outcomes from case and death time-series data — estimate_time_varying","text":"data data.frame containing outbreak data. daily time series dates absolute indicator time (e.g. epiday/epiweek) numbers new cases new deaths time point. Note required columns \"date\" (date), \"cases\" (number reported cases), \"deaths\" (number reported deaths) day outbreak. Note data.frame required unbroken sequence dates missing dates . \"date\" column must class Date (see .Date()). Note also total number cases must greater total number reported deaths. epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution. burn_in_value number time-points (typically days) disregard start time-series, burn-period desired. default value set mean central spread <epidist> object passed function, assuming temporal resolution daily. Alternatively, sensible value might 7, disregard first week cases deaths. consider case data including start time-series, set argument 1. smooth_inputs boolean flag determining whether user wishes smooth case death time-series, using moving average procedure calculating time-varying severity. Useful noisy time-series time-series strong reporting (e.g., weekend) effects smoothing_window odd number determining smoothing window size use smoothing case death time-series, using moving average procedure calculating time-varying severity. Useful noisy time-series time-series strong reporting (e.g., weekend) effects. default value 1 smoothing. Values > 1 apply smoothing. correct_for_delays boolean flag indicating whether user wishes correct delay case detection death. FALSE corresponds naive severity calculated, TRUE corresponds user calculating corrected severity","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_time_varying.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate known outcomes from case and death time-series data — estimate_time_varying","text":"data.frame containing MLE estimate 95% confidence interval corrected severity","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/estimate_time_varying.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate known outcomes from case and death time-series data — estimate_time_varying","text":"","code":"# load package data data(\"ebola1976\")  # get an onset to death distribution from the {epiparameter} package onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function  # estimate time varying severity without correcting for delays estimate_time_varying(   data = ebola1976,   smooth_inputs = TRUE,   burn_in_value = 7L,   correct_for_delays = FALSE ) #>          date cases deaths severity_me severity_lo severity_hi #> 1  1976-08-25     1      0          NA          NA          NA #> 2  1976-08-26     0      0          NA          NA          NA #> 3  1976-08-27     0      0          NA          NA          NA #> 4  1976-08-28     0      0          NA          NA          NA #> 5  1976-08-29     0      0          NA          NA          NA #> 6  1976-08-30     0      0          NA          NA          NA #> 7  1976-08-31     0      0          NA          NA          NA #> 8  1976-09-01     1      0   0.0000000 0.000000000   0.9750000 #> 9  1976-09-02     1      0   0.0000000 0.000000000   0.9750000 #> 10 1976-09-03     1      0   0.0000000 0.000000000   0.9750000 #> 11 1976-09-04     4      0   0.0000000 0.000000000   0.6023646 #> 12 1976-09-05     1      0   0.0000000 0.000000000   0.9750000 #> 13 1976-09-06     1      0   0.0000000 0.000000000   0.9750000 #> 14 1976-09-07     3      0   0.0000000 0.000000000   0.7075982 #> 15 1976-09-08     2      1   0.5000000 0.012579117   0.9874209 #> 16 1976-09-09     7      2   0.2857143 0.036692566   0.7095791 #> 17 1976-09-10     9      1   0.1111111 0.002809137   0.4824965 #> 18 1976-09-11     4      3   0.7500000 0.194120450   0.9936905 #> 19 1976-09-12     8      1   0.1250000 0.003159724   0.5265097 #> 20 1976-09-13     9      2   0.2222222 0.028144973   0.6000936 #> 21 1976-09-14     8      1   0.1250000 0.003159724   0.5265097 #> 22 1976-09-15     9      8   0.8888889 0.517503485   0.9971909 #> 23 1976-09-16     6      4   0.6666667 0.222778096   0.9567281 #> 24 1976-09-17     6      3   0.5000000 0.118117249   0.8818828 #> 25 1976-09-18     3      5          NA          NA          NA #> 26 1976-09-19     8      8   1.0000000 0.630583352   1.0000000 #> 27 1976-09-20    10      6   0.6000000 0.262378077   0.8784477 #> 28 1976-09-21     5      6          NA          NA          NA #> 29 1976-09-22    16     10   0.6250000 0.354346094   0.8480163 #> 30 1976-09-23    12      3   0.2500000 0.054860645   0.5718585 #> 31 1976-09-24    11      7   0.6363636 0.307904715   0.8907366 #> 32 1976-09-25    11      8   0.7272727 0.390257440   0.9397823 #> 33 1976-09-26     7     11          NA          NA          NA #> 34 1976-09-27     7      7   1.0000000 0.590383603   1.0000000 #> 35 1976-09-28     4     13          NA          NA          NA #> 36 1976-09-29     4     12          NA          NA          NA #> 37 1976-09-30     3      9          NA          NA          NA #> 38 1976-10-01     7      9          NA          NA          NA #> 39 1976-10-02     2      7          NA          NA          NA #> 40 1976-10-03     3      6          NA          NA          NA #> 41 1976-10-04     8      8   1.0000000 0.630583352   1.0000000 #> 42 1976-10-05     5      6          NA          NA          NA #> 43 1976-10-06     7      2   0.2857143 0.036692566   0.7095791 #> 44 1976-10-07     5      6          NA          NA          NA #> 45 1976-10-08     2      4          NA          NA          NA #> 46 1976-10-09     3      3   1.0000000 0.292401774   1.0000000 #> 47 1976-10-10     4      2   0.5000000 0.067585986   0.9324140 #> 48 1976-10-11     3      6          NA          NA          NA #> 49 1976-10-12     6      4   0.6666667 0.222778096   0.9567281 #> 50 1976-10-13     2      6          NA          NA          NA #> 51 1976-10-14     1      7          NA          NA          NA #> 52 1976-10-15     0      7          NA          NA          NA #> 53 1976-10-16     0      2          NA          NA          NA #> 54 1976-10-17     0      4          NA          NA          NA #> 55 1976-10-18     1      1   1.0000000 0.025000000   1.0000000 #> 56 1976-10-19     1      1   1.0000000 0.025000000   1.0000000 #> 57 1976-10-20     2      4          NA          NA          NA #> 58 1976-10-21     0      1          NA          NA          NA #> 59 1976-10-22     0      1          NA          NA          NA #> 60 1976-10-23     0      0          NA          NA          NA #> 61 1976-10-24     1      0   0.0000000 0.000000000   0.9750000 #> 62 1976-10-25     0      0          NA          NA          NA #> 63 1976-10-26     0      2          NA          NA          NA #> 64 1976-10-27     0      0          NA          NA          NA #> 65 1976-10-28     0      2          NA          NA          NA #> 66 1976-10-29     0      1          NA          NA          NA #> 67 1976-10-30     0      0          NA          NA          NA #> 68 1976-10-31     0      0          NA          NA          NA #> 69 1976-11-01     0      0          NA          NA          NA #> 70 1976-11-02     0      0          NA          NA          NA #> 71 1976-11-03     0      0          NA          NA          NA #> 72 1976-11-04     0      0          NA          NA          NA #> 73 1976-11-05     0      1          NA          NA          NA  # estimate time varying severity while correcting for delays estimate_time_varying(   data = ebola1976,   epi_dist = onset_to_death_ebola,   smooth_inputs = TRUE,   burn_in_value = 7L,   correct_for_delays = TRUE ) #>          date cases deaths severity_me severity_lo severity_hi #> 1  1976-08-25     1      0          NA          NA          NA #> 2  1976-08-26     0      0          NA          NA          NA #> 3  1976-08-27     0      0          NA          NA          NA #> 4  1976-08-28     0      0          NA          NA          NA #> 5  1976-08-29     0      0          NA          NA          NA #> 6  1976-08-30     0      0          NA          NA          NA #> 7  1976-08-31     0      0          NA          NA          NA #> 8  1976-09-01     1      0          NA          NA          NA #> 9  1976-09-02     1      0          NA          NA          NA #> 10 1976-09-03     1      0          NA          NA          NA #> 11 1976-09-04     4      0          NA          NA          NA #> 12 1976-09-05     1      0          NA          NA          NA #> 13 1976-09-06     1      0          NA          NA          NA #> 14 1976-09-07     3      0          NA          NA          NA #> 15 1976-09-08     2      1          NA          NA          NA #> 16 1976-09-09     7      2          NA          NA          NA #> 17 1976-09-10     9      1          NA          NA          NA #> 18 1976-09-11     4      3          NA          NA          NA #> 19 1976-09-12     8      1          NA          NA          NA #> 20 1976-09-13     9      2          NA          NA          NA #> 21 1976-09-14     8      1   1.0000000 0.025000000   1.0000000 #> 22 1976-09-15     9      8          NA          NA          NA #> 23 1976-09-16     6      4          NA          NA          NA #> 24 1976-09-17     6      3          NA          NA          NA #> 25 1976-09-18     3      5          NA          NA          NA #> 26 1976-09-19     8      8          NA          NA          NA #> 27 1976-09-20    10      6          NA          NA          NA #> 28 1976-09-21     5      6          NA          NA          NA #> 29 1976-09-22    16     10          NA          NA          NA #> 30 1976-09-23    12      3   0.6000000 0.146632800   0.9472550 #> 31 1976-09-24    11      7          NA          NA          NA #> 32 1976-09-25    11      8          NA          NA          NA #> 33 1976-09-26     7     11          NA          NA          NA #> 34 1976-09-27     7      7          NA          NA          NA #> 35 1976-09-28     4     13          NA          NA          NA #> 36 1976-09-29     4     12          NA          NA          NA #> 37 1976-09-30     3      9          NA          NA          NA #> 38 1976-10-01     7      9          NA          NA          NA #> 39 1976-10-02     2      7   0.8750000 0.473490329   0.9968403 #> 40 1976-10-03     3      6   0.7500000 0.349144206   0.9681460 #> 41 1976-10-04     8      8   0.8888889 0.517503485   0.9971909 #> 42 1976-10-05     5      6   0.6666667 0.299295056   0.9251454 #> 43 1976-10-06     7      2   0.2222222 0.028144973   0.6000936 #> 44 1976-10-07     5      6   0.7500000 0.349144206   0.9681460 #> 45 1976-10-08     2      4   0.5000000 0.157012770   0.8429872 #> 46 1976-10-09     3      3   0.3750000 0.085233414   0.7551368 #> 47 1976-10-10     4      2   0.2857143 0.036692566   0.7095791 #> 48 1976-10-11     3      6   0.8571429 0.421276803   0.9963897 #> 49 1976-10-12     6      4   0.6666667 0.222778096   0.9567281 #> 50 1976-10-13     2      6   1.0000000 0.540741874   1.0000000 #> 51 1976-10-14     1      7          NA          NA          NA #> 52 1976-10-15     0      7          NA          NA          NA #> 53 1976-10-16     0      2   0.3333333 0.043271868   0.7772219 #> 54 1976-10-17     0      4   0.8000000 0.283582064   0.9949492 #> 55 1976-10-18     1      1   0.2000000 0.005050763   0.7164179 #> 56 1976-10-19     1      1   0.2000000 0.005050763   0.7164179 #> 57 1976-10-20     2      4   0.8000000 0.283582064   0.9949492 #> 58 1976-10-21     0      1   0.2000000 0.005050763   0.7164179 #> 59 1976-10-22     0      1   0.2500000 0.006309463   0.8058796 #> 60 1976-10-23     0      0   0.0000000 0.000000000   0.6023646 #> 61 1976-10-24     1      0   0.0000000 0.000000000   0.6023646 #> 62 1976-10-25     0      0   0.0000000 0.000000000   0.7075982 #> 63 1976-10-26     0      2   0.6666667 0.094299324   0.9915962 #> 64 1976-10-27     0      0   0.0000000 0.000000000   0.8418861 #> 65 1976-10-28     0      2   1.0000000 0.158113883   1.0000000 #> 66 1976-10-29     0      1   0.5000000 0.012579117   0.9874209 #> 67 1976-10-30     0      0   0.0000000 0.000000000   0.8418861 #> 68 1976-10-31     0      0   0.0000000 0.000000000   0.9750000 #> 69 1976-11-01     0      0   0.0000000 0.000000000   0.9750000 #> 70 1976-11-02     0      0   0.0000000 0.000000000   0.9750000 #> 71 1976-11-03     0      0   0.0000000 0.000000000   0.9750000 #> 72 1976-11-04     0      0   0.0000000 0.000000000   0.9750000 #> 73 1976-11-05     0      1          NA          NA          NA"},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a default burn-in value from a delay distribution — get_default_burn_in","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"Get default burn-value delay distribution","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"","code":"get_default_burn_in(epi_dist = NULL)"},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/get_default_burn_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a default burn-in value from a delay distribution — get_default_burn_in","text":"single integer, burn-value.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate known outcomes from case and death time-series data — known_outcomes","title":"Estimate known outcomes from case and death time-series data — known_outcomes","text":"Estimates expected number individuals known outcomes case death time series data outbreak, time point supplied. Calculates daily new number known outcomes. Uses probability mass function representing delay case detection death, typically approximated symptom onset death distribution literature disease question.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate known outcomes from case and death time-series data — known_outcomes","text":"","code":"known_outcomes(data, epi_dist = NULL)"},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate known outcomes from case and death time-series data — known_outcomes","text":"data data.frame containing outbreak data. daily time series dates absolute indicator time (e.g. epiday/epiweek) numbers new cases time point. function require data daily deaths, column (others) retained present. epi_dist delay distribution used, form epiparameter::epidist() object. used obtain probability mass function parameterised time; .e. \\(f(t)\\) gives probability case known outcomes (.e. death) time \\(t\\), parameterised disease-specific parameters supplied . typical example symptom onset death delay distribution.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate known outcomes from case and death time-series data — known_outcomes","text":"data.frame columns data, two additional columns, \"known_outcomes\" total number known outcomes day outbreak, \"u_t\" -reporting factor.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/known_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate known outcomes from case and death time-series data — known_outcomes","text":"","code":"# Load Ebola 1976 outbreak data data(\"ebola1976\")  # read epidist for EVD onset to death from {epiparameter} onset_to_death_ebola <- epiparameter::epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"onset_to_death\",   author = \"Barry_etal\" ) #> Using Barry et al. (2018) <10.1016/S0140-6736(18)31387-4> PMID: 30047375.  #> To retrieve the short citation use the 'get_citation' function  # examine the first few rows of the output head(   known_outcomes(data = ebola1976, onset_to_death_ebola) ) #>         date cases deaths known_outcomes        u_t #> 1 1976-08-25     1      0     0.00000000 0.00000000 #> 2 1976-08-26     0      0     0.03316057 0.03316057 #> 3 1976-08-27     0      0     0.06482994 0.09799050 #> 4 1976-08-28     0      0     0.08472567 0.18271617 #> 5 1976-08-29     0      0     0.09389465 0.27661082 #> 6 1976-08-30     0      0     0.09506629 0.37167711"},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for CFR estimation — prepare_data","title":"Prepare data for CFR estimation — prepare_data","text":"S3 generic default method. Rather, methods classes commonly found epidemiological data, <incidence2> {incidence2} package. See incidence2::incidence().","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for CFR estimation — prepare_data","text":"","code":"prepare_data(data, ...)"},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for CFR estimation — prepare_data","text":"data data.frame-like object. ... arguments passed methods.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data from <incidence2> objects — prepare_data.incidence2","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"Prepares <incidence2> objects disease severity estimates. function currently support grouped <incidence2> data.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"","code":"# S3 method for incidence2 prepare_data(   data,   cases_variable = \"cases\",   deaths_variable = \"deaths\",   fill_NA = FALSE,   ... )"},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"data <incidence2> object. cases_variable string name cases variable \"count_variable\" column data. deaths_variable string name deaths variable \"count_variable\" column data. fill_NA logical indicating whether NAs cases deaths data replaced 0-s. default value FALSE. function error fill_NA = FALSE NAs detected case death data. ... arguments.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"data.frame suitable disease severity estimation functions provided {cfr}, columns \"date\", \"cases\", \"deaths\". Note groups <incidence2> retained, cases deaths summed date. result continuous sequence dates start end date data; required data passed functions estimate_static().","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"function can replace NAs case death data 0-s requested user using fill_NA argument, FALSE default, meaning NAs retained. issue arise dataset non-sequential dates, function fills missing dates range dates input data. downstream functions require data continuous sequence dates. Keeping NAs cause downstream issues calling functions estimate_static() data, handle NAs. Setting fill_NA = TRUE resolves issue, must conscious choice.","code":""},{"path":"https://epiverse-trace.github.io/cfr/reference/prepare_data.incidence2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data from <incidence2> objects — prepare_data.incidence2","text":"","code":"# load Covid-19 data from incidence2 covid_uk <- incidence2::covidregionaldataUK  # convert to incidence2 object covid_uk_incidence <- incidence2::incidence(   covid_uk,   date_index = \"date\",   counts = c(\"cases_new\", \"deaths_new\"),   count_names_to = \"count_variable\" )  # View head of prepared data head(   prepare_data(     covid_uk_incidence,     cases_variable = \"cases_new\",     deaths_variable = \"deaths_new\",     fill_NA = TRUE   ) ) #>         date cases deaths #> 1 2020-01-30     0      0 #> 2 2020-01-31     0      0 #> 3 2020-02-01     0      0 #> 4 2020-02-02     0      0 #> 5 2020-02-03     0      0 #> 6 2020-02-04     0      0"}]
