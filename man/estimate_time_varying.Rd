% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_time_varying.R
\name{estimate_time_varying}
\alias{estimate_time_varying}
\title{Estimate known outcomes from case and death time-series data}
\usage{
estimate_time_varying(
  df_in,
  epi_dist,
  burn_in_value = get_default_burn_in(epi_dist),
  smooth_inputs = FALSE,
  smoothing_window = 7,
  correct_for_delays = TRUE
)
}
\arguments{
\item{df_in}{A data.frame containing the outbreak data. A daily time series
with dates or some other absolute indicator of time (e.g. epiday/epiweek) and
the numbers of new cases and new deaths at each time point}

\item{epi_dist}{The delay distribution used, in the form of an
\code{\link[epiparameter:epidist]{epiparameter::epidist()}} object. This is used to obtain a probability
mass function parameterised by time; i.e. \eqn{f(t)} which gives the
probability a case has a known outcomes (i.e. death) at time \eqn{t},
parameterised with disease-specific parameters before it is supplied here.
A typical example would be a symptom onset to death delay distribution.}

\item{burn_in_value}{The number of time-points (typically days) to disregard
at the start of the time-series, if a burn-in period is desired.
The default value is set to the mean of the central spread of the \code{epidist}
object passed to the function, assuming the temporal resolution is daily.
Alternatively, a sensible value might be 7, to disregard the first week of
cases and deaths.
To consider all case data including the start of the time-series, set this
argument to 0.}

\item{smooth_inputs}{A boolean flag determining whether the user wishes to
smooth the case and death time-series, using a moving average procedure
before calculating the time-varying severity. Useful for noisey time-series
or time-series with strong reporting (e.g., weekend) effects}

\item{smoothing_window}{A number determining the smoothing window size to use
when smoothing the case and death time-series, using a moving average
procedure before calculating the time-varying severity.
Useful for noisy time-series or time-series with strong reporting
(e.g., weekend) effects.
The default value is 1 for \emph{no smoothing}. Values > 1 apply smoothing.}

\item{correct_for_delays}{A boolean flag indicating whether the user wishes
to correct for the delay between case detection and death. FALSE corresponds
to a naive severity being calculated, TRUE corresponds to the user
calculating a corrected severity}
}
\value{
A data.frame containing the MLE estimate and 95\% confidence interval
of the corrected severity
}
\description{
Calculates how the severity of a disease changes over time,
corrected for a user-specified delay. If cases are supplied, and the delay
distribution representing the delay between case detection and death, then
a case fatality ratio over time is estimated
}
\examples{

library(datadelay)
library(epiparameter)
library(covidregionaldata)
library(dplyr)

df_covid_uk <- get_national_data(
  countries = "united kingdom", source = "who", verbose = FALSE
)
df_covid_uk <- dplyr::rename(
  df_covid_uk,
  cases = cases_new, deaths = deaths_new
)

df_covid_uk_subset <- subset(df_covid_uk, date <= "2020-12-31")

onset_to_death_covid <- epidist_db(
  disease = "COVID-19",
  epi_dist = "onset_to_death",
  author = "Linton_etal"
)

df_covid_cfr_uk_naive <- estimate_time_varying(
  df_covid_uk_subset,
  epi_dist = onset_to_death_covid,
  smooth_inputs = TRUE,
  burn_in_value = 7L,
  correct_for_delays = FALSE
)

df_covid_cfr_uk_corrected <- estimate_time_varying(
  df_covid_uk_subset,
  epi_dist = onset_to_death_covid,
  smooth_inputs = TRUE,
  burn_in_value = 7L,
  correct_for_delays = TRUE
)

}
